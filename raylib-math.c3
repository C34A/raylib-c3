extern func float clamp(float value, float min, float max) @extname("Clamp");
extern func float lerp(float start, float end, float amount) @extname("Lerp");
extern func float normalize(float value, float start, float end) @extname("Normalize");
extern func float remap(float value, float inputStart, float inputEnd, float outputStart, float outputEnd) @extname("Remap");
extern func Vector2 vector2_zero() @extname("Vector2Zero");
extern func Vector2 vector2_one() @extname("Vector2One");
extern func Vector2 vector2_add(Vector2 v1, Vector2 v2) @extname("Vector2Add");
extern func Vector2 vector2_add_value(Vector2 v, float add) @extname("Vector2AddValue");
extern func Vector2 vector2_subtract(Vector2 v1, Vector2 v2) @extname("Vector2Subtract");
extern func Vector2 vector2_subtract_value(Vector2 v, float sub) @extname("Vector2SubtractValue");
extern func float vector2_length(Vector2 v) @extname("Vector2Length");
extern func float vector2_length_sqr(Vector2 v) @extname("Vector2LengthSqr");
extern func float vector2_dot_product(Vector2 v1, Vector2 v2) @extname("Vector2DotProduct");
extern func float vector2_distance(Vector2 v1, Vector2 v2) @extname("Vector2Distance");
extern func float vector2_angle(Vector2 v1, Vector2 v2) @extname("Vector2Angle");
extern func Vector2 vector2_scale(Vector2 v, float scale) @extname("Vector2Scale");
extern func Vector2 vector2_multiply(Vector2 v1, Vector2 v2) @extname("Vector2Multiply");
extern func Vector2 vector2_negate(Vector2 v) @extname("Vector2Negate");
extern func Vector2 vector2_divide(Vector2 v1, Vector2 v2) @extname("Vector2Divide");
extern func Vector2 vector2_normalize(Vector2 v) @extname("Vector2Normalize");
extern func Vector2 vector2_lerp(Vector2 v1, Vector2 v2, float amount) @extname("Vector2Lerp");
extern func Vector2 vector2_reflect(Vector2 v, Vector2 normal) @extname("Vector2Reflect");
extern func Vector2 vector2_rotate(Vector2 v, float degs) @extname("Vector2Rotate");
extern func Vector2 vector2_move_towards(Vector2 v, Vector2 target, float maxDistance) @extname("Vector2MoveTowards");
extern func Vector3 vector3_zero() @extname("Vector3Zero");
extern func Vector3 vector3_one() @extname("Vector3One");
extern func Vector3 vector3_add(Vector3 v1, Vector3 v2) @extname("Vector3Add");
extern func Vector3 vector3_add_value(Vector3 v, float add) @extname("Vector3AddValue");
extern func Vector3 vector3_subtract(Vector3 v1, Vector3 v2) @extname("Vector3Subtract");
extern func Vector3 vector3_subtract_value(Vector3 v, float sub) @extname("Vector3SubtractValue");
extern func Vector3 vector3_scale(Vector3 v, float scalar) @extname("Vector3Scale");
extern func Vector3 vector3_multiply(Vector3 v1, Vector3 v2) @extname("Vector3Multiply");
extern func Vector3 vector3_cross_product(Vector3 v1, Vector3 v2) @extname("Vector3CrossProduct");
extern func Vector3 vector3_perpendicular(Vector3 v) @extname("Vector3Perpendicular");
extern func float vector3_length(Vector3 v) @extname("Vector3Length");
extern func float vector3_length_sqr(Vector3 v) @extname("Vector3LengthSqr");
extern func float vector3_dot_product(Vector3 v1, Vector3 v2) @extname("Vector3DotProduct");
extern func float vector3_distance(Vector3 v1, Vector3 v2) @extname("Vector3Distance");
extern func Vector3 vector3_negate(Vector3 v) @extname("Vector3Negate");
extern func Vector3 vector3_divide(Vector3 v1, Vector3 v2) @extname("Vector3Divide");
extern func Vector3 vector3_normalize(Vector3 v) @extname("Vector3Normalize");
extern func void vector3_ortho_normalize(Vector3* v1, Vector3* v2) @extname("Vector3OrthoNormalize");
extern func Vector3 vector3_transform(Vector3 v, Matrix mat) @extname("Vector3Transform");
extern func Vector3 vector3_rotate_by_quaternion(Vector3 v, Quaternion q) @extname("Vector3RotateByQuaternion");
extern func Vector3 vector3_lerp(Vector3 v1, Vector3 v2, float amount) @extname("Vector3Lerp");
extern func Vector3 vector3_reflect(Vector3 v, Vector3 normal) @extname("Vector3Reflect");
extern func Vector3 vector3_min(Vector3 v1, Vector3 v2) @extname("Vector3Min");
extern func Vector3 vector3_max(Vector3 v1, Vector3 v2) @extname("Vector3Max");
extern func Vector3 vector3_barycenter(Vector3 p, Vector3 a, Vector3 b, Vector3 c) @extname("Vector3Barycenter");
extern func float3 vector3_to_float_v(Vector3 v) @extname("Vector3ToFloatV");
extern func float matrix_determinant(Matrix mat) @extname("MatrixDeterminant");
extern func float matrix_trace(Matrix mat) @extname("MatrixTrace");
extern func Matrix matrix_transpose(Matrix mat) @extname("MatrixTranspose");
extern func Matrix matrix_invert(Matrix mat) @extname("MatrixInvert");
extern func Matrix matrix_normalize(Matrix mat) @extname("MatrixNormalize");
extern func Matrix matrix_identity() @extname("MatrixIdentity");
extern func Matrix matrix_add(Matrix left, Matrix right) @extname("MatrixAdd");
extern func Matrix matrix_subtract(Matrix left, Matrix right) @extname("MatrixSubtract");
extern func Matrix matrix_multiply(Matrix left, Matrix right) @extname("MatrixMultiply");
extern func Matrix matrix_translate(float x, float y, float z) @extname("MatrixTranslate");
extern func Matrix matrix_rotate(Vector3 axis, float angle) @extname("MatrixRotate");
extern func Matrix matrix_rotate_x(float angle) @extname("MatrixRotateX");
extern func Matrix matrix_rotate_y(float angle) @extname("MatrixRotateY");
extern func Matrix matrix_rotate_z(float angle) @extname("MatrixRotateZ");
extern func Matrix matrix_rotate_xyz(Vector3 ang) @extname("MatrixRotateXYZ");
extern func Matrix matrix_rotate_zyx(Vector3 ang) @extname("MatrixRotateZYX");
extern func Matrix matrix_scale(float x, float y, float z) @extname("MatrixScale");
extern func Matrix matrix_frustum(double left, double right, double bottom, double top, double near, double far) @extname("MatrixFrustum");
extern func Matrix matrix_perspective(double fovy, double aspect, double near, double far) @extname("MatrixPerspective");
extern func Matrix matrix_ortho(double left, double right, double bottom, double top, double near, double far) @extname("MatrixOrtho");
extern func Matrix matrix_look_at(Vector3 eye, Vector3 target, Vector3 up) @extname("MatrixLookAt");
extern func float16 matrix_to_float_v(Matrix mat) @extname("MatrixToFloatV");
extern func Quaternion quaternion_add(Quaternion q1, Quaternion q2) @extname("QuaternionAdd");
extern func Quaternion quaternion_add_value(Quaternion q, float add) @extname("QuaternionAddValue");
extern func Quaternion quaternion_subtract(Quaternion q1, Quaternion q2) @extname("QuaternionSubtract");
extern func Quaternion quaternion_subtract_value(Quaternion q, float sub) @extname("QuaternionSubtractValue");
extern func Quaternion quaternion_identity() @extname("QuaternionIdentity");
extern func float quaternion_length(Quaternion q) @extname("QuaternionLength");
extern func Quaternion quaternion_normalize(Quaternion q) @extname("QuaternionNormalize");
extern func Quaternion quaternion_invert(Quaternion q) @extname("QuaternionInvert");
extern func Quaternion quaternion_multiply(Quaternion q1, Quaternion q2) @extname("QuaternionMultiply");
extern func Quaternion quaternion_scale(Quaternion q, float mul) @extname("QuaternionScale");
extern func Quaternion quaternion_divide(Quaternion q1, Quaternion q2) @extname("QuaternionDivide");
extern func Quaternion quaternion_lerp(Quaternion q1, Quaternion q2, float amount) @extname("QuaternionLerp");
extern func Quaternion quaternion_nlerp(Quaternion q1, Quaternion q2, float amount) @extname("QuaternionNlerp");
extern func Quaternion quaternion_slerp(Quaternion q1, Quaternion q2, float amount) @extname("QuaternionSlerp");
extern func Quaternion quaternion_from_vector3_to_vector3(Vector3 from, Vector3 to) @extname("QuaternionFromVector3ToVector3");
extern func Quaternion quaternion_from_matrix(Matrix mat) @extname("QuaternionFromMatrix");
extern func Matrix quaternion_to_matrix(Quaternion q) @extname("QuaternionToMatrix");
extern func Quaternion quaternion_from_axis_angle(Vector3 axis, float angle) @extname("QuaternionFromAxisAngle");
extern func void quaternion_to_axis_angle(Quaternion q, Vector3* outAxis, float* outAngle) @extname("QuaternionToAxisAngle");
extern func Quaternion quaternion_from_euler(float pitch, float yaw, float roll) @extname("QuaternionFromEuler");
extern func Vector3 quaternion_to_euler(Quaternion q) @extname("QuaternionToEuler");
extern func Quaternion quaternion_transform(Quaternion q, Matrix mat) @extname("QuaternionTransform");
extern func Vector3 vector3_unproject(Vector3 source, Matrix projection, Matrix view) @extname("Vector3Unproject");

