module raylibc3;

func void InitWindow(int width, int height, byte *title);
func bool WindowShouldClose();
func void CloseWindow();
func bool IsWindowReady();
func bool IsWindowFullscreen();
func bool IsWindowHidden();
func bool IsWindowMinimized();
func bool IsWindowMaximized();
func bool IsWindowFocused();
func bool IsWindowResized();
func bool IsWindowState(uint flag);
func void SetWindowState(uint flags);
func void ClearWindowState(uint flags);
func void ToggleFullscreen();
func void MaximizeWindow();
func void MinimizeWindow();
func void RestoreWindow();
func void SetWindowIcon(Image image);
func void SetWindowTitle(byte *title);
func void SetWindowPosition(int x, int y);
func void SetWindowMonitor(int monitor);
func void SetWindowMinSize(int width, int height);
func void SetWindowSize(int width, int height);
func void *GetWindowHandle();
func int GetScreenWidth();
func int GetScreenHeight();
func int GetMonitorCount();
func int GetCurrentMonitor();
func Vector2 GetMonitorPosition(int monitor);
func int GetMonitorWidth(int monitor);
func int GetMonitorHeight(int monitor);
func int GetMonitorPhysicalWidth(int monitor);
func int GetMonitorPhysicalHeight(int monitor);
func int GetMonitorRefreshRate(int monitor);
func Vector2 GetWindowPosition();
func Vector2 GetWindowScaleDPI();
func byte *GetMonitorName(int monitor);
func void SetClipboardText(byte *text);
func byte *GetClipboardText();
func void SwapScreenBuffer();
func void PollInputEvents();
func void WaitTime(float ms);
func void ShowCursor();
func void HideCursor();
func bool IsCursorHidden();
func void EnableCursor();
func void DisableCursor();
func bool IsCursorOnScreen();
func void ClearBackground(Color color);
func void BeginDrawing();
func void EndDrawing();
func void BeginMode2D(Camera2D camera);
func void EndMode2D();
func void BeginMode3D(Camera3D camera);
func void EndMode3D();
func void BeginTextureMode(RenderTexture2D target);
func void EndTextureMode();
func void BeginShaderMode(Shader shader);
func void EndShaderMode();
func void BeginBlendMode(int mode);
func void EndBlendMode();
func void BeginScissorMode(int x, int y, int width, int height);
func void EndScissorMode();
func void BeginVrStereoMode(VrStereoConfig config);
func void EndVrStereoMode();
func VrStereoConfig LoadVrStereoConfig(VrDeviceInfo device);
func void UnloadVrStereoConfig(VrStereoConfig config);
func Shader LoadShader(byte *vsFileName, byte *fsFileName);
func Shader LoadShaderFromMemory(byte *vsCode, byte *fsCode);
func int GetShaderLocation(Shader shader, byte *uniformName);
func int GetShaderLocationAttrib(Shader shader, byte *attribName);
func void SetShaderValue(Shader shader, int locIndex, void *value, int uniformType);
func void SetShaderValueV(Shader shader, int locIndex, void *value, int uniformType, int count);
func void SetShaderValueMatrix(Shader shader, int locIndex, Matrix mat);
func void SetShaderValueTexture(Shader shader, int locIndex, Texture2D texture);
func void UnloadShader(Shader shader);
func Ray GetMouseRay(Vector2 mousePosition, Camera camera);
func Matrix GetCameraMatrix(Camera camera);
func Matrix GetCameraMatrix2D(Camera2D camera);
func Vector2 GetWorldToScreen(Vector3 position, Camera camera);
func Vector2 GetWorldToScreenEx(Vector3 position, Camera camera, int width, int height);
func Vector2 GetWorldToScreen2D(Vector2 position, Camera2D camera);
func Vector2 GetScreenToWorld2D(Vector2 position, Camera2D camera);
func void SetTargetFPS(int fps);
func int GetFPS();
func float GetFrameTime();
func double GetTime();
func int GetRandomValue(int min, int max);
func void TakeScreenshot(byte *fileName);
func void SetConfigFlags(uint flags);
func void TraceLog(int logLevel, byte *text, ...);
func void SetTraceLogLevel(int logLevel);
func void *MemAlloc(int size);
func void *MemRealloc(void *ptr, int size);
func void MemFree(void *ptr);
func void SetTraceLogCallback(TraceLogCallback callback);
func void SetLoadFileDataCallback(LoadFileDataCallback callback);
func void SetSaveFileDataCallback(SaveFileDataCallback callback);
func void SetLoadFileTextCallback(LoadFileTextCallback callback);
func void SetSaveFileTextCallback(SaveFileTextCallback callback);
func byte *LoadFileData(byte *fileName, uint *bytesRead);
func void UnloadFileData(byte *data);
func bool SaveFileData(byte *fileName, void *data, uint bytesToWrite);
func byte *LoadFileText(byte *fileName);
func void UnloadFileText(byte *text);
func bool SaveFileText(byte *fileName, byte *text);
func bool FileExists(byte *fileName);
func bool DirectoryExists(byte *dirPath);
func bool IsFileExtension(byte *fileName, byte *ext);
func byte *GetFileExtension(byte *fileName);
func byte *GetFileName(byte *filePath);
func byte *GetFileNameWithoutExt(byte *filePath);
func byte *GetDirectoryPath(byte *filePath);
func byte *GetPrevDirectoryPath(byte *dirPath);
func byte *GetWorkingDirectory();
func byte **GetDirectoryFiles(byte *dirPath, int *count);
func void ClearDirectoryFiles();
func bool ChangeDirectory(byte *dir);
func bool IsFileDropped();
func byte **GetDroppedFiles(int *count);
func void ClearDroppedFiles();
func long GetFileModTime(byte *fileName);
func byte *CompressData(byte *data, int dataLength, int *compDataLength);
func byte *DecompressData(byte *compData, int compDataLength, int *dataLength);
func bool SaveStorageValue(uint position, int value);
func int LoadStorageValue(uint position);
func void OpenURL(byte *url);
func bool IsKeyPressed(KeyboardKey key);
func bool IsKeyDown(KeyboardKey key);
func bool IsKeyReleased(KeyboardKey key);
func bool IsKeyUp(KeyboardKey key);
func void SetExitKey(KeyboardKey key);
func int GetKeyPressed();
func int GetCharPressed();
func bool IsGamepadAvailable(int gamepad);
func bool IsGamepadName(int gamepad, byte *name);
func byte *GetGamepadName(int gamepad);
func bool IsGamepadButtonPressed(int gamepad, MouseButton button);
func bool IsGamepadButtonDown(int gamepad, MouseButton button);
func bool IsGamepadButtonReleased(int gamepad, MouseButton button);
func bool IsGamepadButtonUp(int gamepad, MouseButton button);
func int GetGamepadButtonPressed();
func int GetGamepadAxisCount(int gamepad);
func float GetGamepadAxisMovement(int gamepad, int axis);
func int SetGamepadMappings(byte *mappings);
func bool IsMouseButtonPressed(MouseButton button);
func bool IsMouseButtonDown(MouseButton button);
func bool IsMouseButtonReleased(MouseButton button);
func bool IsMouseButtonUp(MouseButton button);
func int GetMouseX();
func int GetMouseY();
func Vector2 GetMousePosition();
func Vector2 GetMouseDelta();
func void SetMousePosition(int x, int y);
func void SetMouseOffset(int offsetX, int offsetY);
func void SetMouseScale(float scaleX, float scaleY);
func float GetMouseWheelMove();
func void SetMouseCursor(int cursor);
func int GetTouchX();
func int GetTouchY();
func Vector2 GetTouchPosition(int index);
func void SetGesturesEnabled(uint flags);
func bool IsGestureDetected(int gesture);
func int GetGestureDetected();
func int GetTouchPointsCount();
func float GetGestureHoldDuration();
func Vector2 GetGestureDragVector();
func float GetGestureDragAngle();
func Vector2 GetGesturePinchVector();
func float GetGesturePinchAngle();
func void SetCameraMode(Camera camera, CameraMode mode);
func void UpdateCamera(Camera *camera);
func void SetCameraPanControl(int keyPan);
func void SetCameraAltControl(int keyAlt);
func void SetCameraSmoothZoomControl(int keySmoothZoom);
func void SetCameraMoveControls(int keyFront, int keyBack, int keyRight, int keyLeft, int keyUp, int keyDown);
func void SetShapesTexture(Texture2D texture, Rectangle source);
func void DrawPixel(int posX, int posY, Color color);
func void DrawPixelV(Vector2 position, Color color);
func void DrawLine(int startPosX, int startPosY, int endPosX, int endPosY, Color color);
func void DrawLineV(Vector2 startPos, Vector2 endPos, Color color);
func void DrawLineEx(Vector2 startPos, Vector2 endPos, float thick, Color color);
func void DrawLineBezier(Vector2 startPos, Vector2 endPos, float thick, Color color);
func void DrawLineBezierQuad(Vector2 startPos, Vector2 endPos, Vector2 controlPos, float thick, Color color);
func void DrawLineStrip(Vector2 *points, int pointsCount, Color color);
func void DrawCircle(int centerX, int centerY, float radius, Color color);
func void DrawCircleSector(Vector2 center, float radius, float startAngle, float endAngle, int segments, Color color);
func void DrawCircleSectorLines(Vector2 center, float radius, float startAngle, float endAngle, int segments, Color color);
func void DrawCircleGradient(int centerX, int centerY, float radius, Color color1, Color color2);
func void DrawCircleV(Vector2 center, float radius, Color color);
func void DrawCircleLines(int centerX, int centerY, float radius, Color color);
func void DrawEllipse(int centerX, int centerY, float radiusH, float radiusV, Color color);
func void DrawEllipseLines(int centerX, int centerY, float radiusH, float radiusV, Color color);
func void DrawRing(Vector2 center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, Color color);
func void DrawRingLines(Vector2 center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, Color color);
func void DrawRectangle(int posX, int posY, int width, int height, Color color);
func void DrawRectangleV(Vector2 position, Vector2 size, Color color);
func void DrawRectangleRec(Rectangle rec, Color color);
func void DrawRectanglePro(Rectangle rec, Vector2 origin, float rotation, Color color);
func void DrawRectangleGradientV(int posX, int posY, int width, int height, Color color1, Color color2);
func void DrawRectangleGradientH(int posX, int posY, int width, int height, Color color1, Color color2);
func void DrawRectangleGradientEx(Rectangle rec, Color col1, Color col2, Color col3, Color col4);
func void DrawRectangleLines(int posX, int posY, int width, int height, Color color);
func void DrawRectangleLinesEx(Rectangle rec, float lineThick, Color color);
func void DrawRectangleRounded(Rectangle rec, float roundness, int segments, Color color);
func void DrawRectangleRoundedLines(Rectangle rec, float roundness, int segments, float lineThick, Color color);
func void DrawTriangle(Vector2 v1, Vector2 v2, Vector2 v3, Color color);
func void DrawTriangleLines(Vector2 v1, Vector2 v2, Vector2 v3, Color color);
func void DrawTriangleFan(Vector2 *points, int pointsCount, Color color);
func void DrawTriangleStrip(Vector2 *points, int pointsCount, Color color);
func void DrawPoly(Vector2 center, int sides, float radius, float rotation, Color color);
func void DrawPolyLines(Vector2 center, int sides, float radius, float rotation, Color color);
func void DrawPolyLinesEx(Vector2 center, int sides, float radius, float rotation, float lineThick, Color color);
func bool CheckCollisionRecs(Rectangle rec1, Rectangle rec2);
func bool CheckCollisionCircles(Vector2 center1, float radius1, Vector2 center2, float radius2);
func bool CheckCollisionCircleRec(Vector2 center, float radius, Rectangle rec);
func bool CheckCollisionPointRec(Vector2 point, Rectangle rec);
func bool CheckCollisionPointCircle(Vector2 point, Vector2 center, float radius);
func bool CheckCollisionPointTriangle(Vector2 point, Vector2 p1, Vector2 p2, Vector2 p3);
func bool CheckCollisionLines(Vector2 startPos1, Vector2 endPos1, Vector2 startPos2, Vector2 endPos2, Vector2 *collisionPoint);
func Rectangle GetCollisionRec(Rectangle rec1, Rectangle rec2);
func Image LoadImage(byte *fileName);
func Image LoadImageRaw(byte *fileName, int width, int height, int format, int headerSize);
func Image LoadImageAnim(byte *fileName, int *frames);
func Image LoadImageFromMemory(byte *fileType, byte *fileData, int dataSize);
func Image LoadImageFromTexture(Texture2D texture);
func Image LoadImageFromScreen();
func void UnloadImage(Image image);
func bool ExportImage(Image image, byte *fileName);
func bool ExportImageAsCode(Image image, byte *fileName);
func Image GenImageColor(int width, int height, Color color);
func Image GenImageGradientV(int width, int height, Color top, Color bottom);
func Image GenImageGradientH(int width, int height, Color left, Color right);
func Image GenImageGradientRadial(int width, int height, float density, Color inner, Color outer);
func Image GenImageChecked(int width, int height, int checksX, int checksY, Color col1, Color col2);
func Image GenImageWhiteNoise(int width, int height, float factor);
func Image GenImagePerlinNoise(int width, int height, int offsetX, int offsetY, float scale);
func Image GenImageCellular(int width, int height, int tileSize);
func Image ImageCopy(Image image);
func Image ImageFromImage(Image image, Rectangle rec);
func Image ImageText(byte *text, int fontSize, Color color);
func Image ImageTextEx(Font font, byte *text, float fontSize, float spacing, Color tint);
func void ImageFormat(Image *image, int newFormat);
func void ImageToPOT(Image *image, Color fill);
func void ImageCrop(Image *image, Rectangle crop);
func void ImageAlphaCrop(Image *image, float threshold);
func void ImageAlphaClear(Image *image, Color color, float threshold);
func void ImageAlphaMask(Image *image, Image alphaMask);
func void ImageAlphaPremultiply(Image *image);
func void ImageResize(Image *image, int newWidth, int newHeight);
func void ImageResizeNN(Image *image, int newWidth,int newHeight);
func void ImageResizeCanvas(Image *image, int newWidth, int newHeight, int offsetX, int offsetY, Color fill);
func void ImageMipmaps(Image *image);
func void ImageDither(Image *image, int rBpp, int gBpp, int bBpp, int aBpp);
func void ImageFlipVertical(Image *image);
func void ImageFlipHorizontal(Image *image);
func void ImageRotateCW(Image *image);
func void ImageRotateCCW(Image *image);
func void ImageColorTint(Image *image, Color color);
func void ImageColorInvert(Image *image);
func void ImageColorGrayscale(Image *image);
func void ImageColorContrast(Image *image, float contrast);
func void ImageColorBrightness(Image *image, int brightness);
func void ImageColorReplace(Image *image, Color color, Color replace);
func Color *LoadImageColors(Image image);
func Color *LoadImagePalette(Image image, int maxPaletteSize, int *colorsCount);
func void UnloadImageColors(Color *colors);
func void UnloadImagePalette(Color *colors);
func Rectangle GetImageAlphaBorder(Image image, float threshold);
func void ImageClearBackground(Image *dst, Color color);
func void ImageDrawPixel(Image *dst, int posX, int posY, Color color);
func void ImageDrawPixelV(Image *dst, Vector2 position, Color color);
func void ImageDrawLine(Image *dst, int startPosX, int startPosY, int endPosX, int endPosY, Color color);
func void ImageDrawLineV(Image *dst, Vector2 start, Vector2 end, Color color);
func void ImageDrawCircle(Image *dst, int centerX, int centerY, int radius, Color color);
func void ImageDrawCircleV(Image *dst, Vector2 center, int radius, Color color);
func void ImageDrawRectangle(Image *dst, int posX, int posY, int width, int height, Color color);
func void ImageDrawRectangleV(Image *dst, Vector2 position, Vector2 size, Color color);
func void ImageDrawRectangleRec(Image *dst, Rectangle rec, Color color);
func void ImageDrawRectangleLines(Image *dst, Rectangle rec, int thick, Color color);
func void ImageDraw(Image *dst, Image src, Rectangle srcRec, Rectangle dstRec, Color tint);
func void ImageDrawText(Image *dst, byte *text, int posX, int posY, int fontSize, Color color);
func void ImageDrawTextEx(Image *dst, Font font, byte *text, Vector2 position, float fontSize, float spacing, Color tint);
func Texture2D LoadTexture(byte *fileName);
func Texture2D LoadTextureFromImage(Image image);
func TextureCubemap LoadTextureCubemap(Image image, int layout);
func RenderTexture2D LoadRenderTexture(int width, int height);
func void UnloadTexture(Texture2D texture);
func void UnloadRenderTexture(RenderTexture2D target);
func void UpdateTexture(Texture2D texture, void *pixels);
func void UpdateTextureRec(Texture2D texture, Rectangle rec, void *pixels);
func void GenTextureMipmaps(Texture2D *texture);
func void SetTextureFilter(Texture2D texture, int filter);
func void SetTextureWrap(Texture2D texture, int wrap);
func void DrawTexture(Texture2D texture, int posX, int posY, Color tint);
func void DrawTextureV(Texture2D texture, Vector2 position, Color tint);
func void DrawTextureEx(Texture2D texture, Vector2 position, float rotation, float scale, Color tint);
func void DrawTextureRec(Texture2D texture, Rectangle source, Vector2 position, Color tint);
func void DrawTextureQuad(Texture2D texture, Vector2 tiling, Vector2 offset, Rectangle quad, Color tint);
func void DrawTextureTiled(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, float rotation, float scale, Color tint);
func void DrawTexturePro(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, float rotation, Color tint);
func void DrawTextureNPatch(Texture2D texture, NPatchInfo nPatchInfo, Rectangle dest, Vector2 origin, float rotation, Color tint);
func void DrawTexturePoly(Texture2D texture, Vector2 center, Vector2 *points, Vector2 *texcoords, int pointsCount, Color tint);
func Color Fade(Color color, float alpha);
func int ColorToInt(Color color);
func Vector4 ColorNormalize(Color color);
func Color ColorFromNormalized(Vector4 normalized);
func Vector3 ColorToHSV(Color color);
func Color ColorFromHSV(float hue, float saturation, float value);
func Color ColorAlpha(Color color, float alpha);
func Color ColorAlphaBlend(Color dst, Color src, Color tint);
func Color GetColor(int hexValue);
func Color GetPixelColor(void *srcPtr, int format);
func void SetPixelColor(void *dstPtr, Color color, int format);
func int GetPixelDataSize(int width, int height, int format);
func Font GetFontDefault();
func Font LoadFont(byte *fileName);
func Font LoadFontEx(byte *fileName, int fontSize, int *fontChars, int charsCount);
func Font LoadFontFromImage(Image image, Color key, int firstChar);
func Font LoadFontFromMemory(byte *fileType, byte *fileData, int dataSize, int fontSize, int *fontChars, int charsCount);
func CharInfo *LoadFontData(byte *fileData, int dataSize, int fontSize, int *fontChars, int charsCount, int type);
func Image GenImageFontAtlas(CharInfo *chars, Rectangle **recs, int charsCount, int fontSize, int padding, int packMethod);
func void UnloadFontData(CharInfo *chars, int charsCount);
func void UnloadFont(Font font);
func void DrawFPS(int posX, int posY);
func void DrawText(byte *text, int posX, int posY, int fontSize, Color color);
func void DrawTextEx(Font font, byte *text, Vector2 position, float fontSize, float spacing, Color tint);
func void DrawTextRec(Font font, byte *text, Rectangle rec, float fontSize, float spacing, bool wordWrap, Color tint);
func void DrawTextRecEx(Font font, byte *text, Rectangle rec, float fontSize, float spacing, bool wordWrap, Color tint, int selectStart, int selectLength, Color selectTint, Color selectBackTint);
func void DrawTextCodepoint(Font font, int codepoint, Vector2 position, float fontSize, Color tint);
func int MeasureText(byte *text, int fontSize);
func Vector2 MeasureTextEx(Font font, byte *text, float fontSize, float spacing);
func int GetGlyphIndex(Font font, int codepoint);
func int TextCopy(byte *dst, byte *src);
func bool TextIsEqual(byte *text1, byte *text2);
func uint TextLength(byte *text);
func byte *TextFormat(byte *text, ...);
func byte *TextSubtext(byte *text, int position, int length);
func byte *TextReplace(byte *text, byte *replace, byte *by);
func byte *TextInsert(byte *text, byte *insert, int position);
func byte *TextJoin(byte **textList, int count, byte *delimiter);
func byte **TextSplit(byte *text, byte delimiter, int *count);
func void TextAppend(byte *text, byte *append, int *position);
func int TextFindIndex(byte *text, byte *find);
func byte *TextToUpper(byte *text);
func byte *TextToLower(byte *text);
func byte *TextToPascal(byte *text);
func int TextToInteger(byte *text);
func byte *TextToUtf8(int *codepoints, int length);
func int *LoadCodepoints(byte *text, int *count);
func void UnloadCodepoints(int *codepoints);
func int GetCodepointsCount(byte *text);
func int GetCodepoint(byte *text, int *bytesProcessed);
func byte *CodepointToUtf8(int codepoint, int *byteLength);
func void DrawLine3D(Vector3 startPos, Vector3 endPos, Color color);
func void DrawPoint3D(Vector3 position, Color color);
func void DrawCircle3D(Vector3 center, float radius, Vector3 rotationAxis, float rotationAngle, Color color);
func void DrawTriangle3D(Vector3 v1, Vector3 v2, Vector3 v3, Color color);
func void DrawTriangleStrip3D(Vector3 *points, int pointsCount, Color color);
func void DrawCube(Vector3 position, float width, float height, float length, Color color);
func void DrawCubeV(Vector3 position, Vector3 size, Color color);
func void DrawCubeWires(Vector3 position, float width, float height, float length, Color color);
func void DrawCubeWiresV(Vector3 position, Vector3 size, Color color);
func void DrawCubeTexture(Texture2D texture, Vector3 position, float width, float height, float length, Color color);
func void DrawSphere(Vector3 centerPos, float radius, Color color);
func void DrawSphereEx(Vector3 centerPos, float radius, int rings, int slices, Color color);
func void DrawSphereWires(Vector3 centerPos, float radius, int rings, int slices, Color color);
func void DrawCylinder(Vector3 position, float radiusTop, float radiusBottom, float height, int slices, Color color);
func void DrawCylinderWires(Vector3 position, float radiusTop, float radiusBottom, float height, int slices, Color color);
func void DrawPlane(Vector3 centerPos, Vector2 size, Color color);
func void DrawRay(Ray ray, Color color);
func void DrawGrid(int slices, float spacing);
func Model LoadModel(byte *fileName);
func Model LoadModelFromMesh(Mesh mesh);
func void UnloadModel(Model model);
func void UnloadModelKeepMeshes(Model model);
func BoundingBox GetModelBoundingBox(Model model);
func void DrawModel(Model model, Vector3 position, float scale, Color tint);
func void DrawModelEx(Model model, Vector3 position, Vector3 rotationAxis, float rotationAngle, Vector3 scale, Color tint);
func void DrawModelWires(Model model, Vector3 position, float scale, Color tint);
func void DrawModelWiresEx(Model model, Vector3 position, Vector3 rotationAxis, float rotationAngle, Vector3 scale, Color tint);
func void DrawBoundingBox(BoundingBox box, Color color);
func void DrawBillboard(Camera camera, Texture2D texture, Vector3 position, float size, Color tint);
func void DrawBillboardRec(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector2 size, Color tint);
func void DrawBillboardPro(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector2 size, Vector2 origin, float rotation, Color tint);
func void UploadMesh(Mesh *mesh, bool dynamic);
func void UpdateMeshBuffer(Mesh mesh, int index, void *data, int dataSize, int offset);
func void UnloadMesh(Mesh mesh);
func void DrawMesh(Mesh mesh, Material material, Matrix transform);
func void DrawMeshInstanced(Mesh mesh, Material material, Matrix *transforms, int instances);
func bool ExportMesh(Mesh mesh, byte *fileName);
func BoundingBox GetMeshBoundingBox(Mesh mesh);
func void GenMeshTangents(Mesh *mesh);
func void GenMeshBinormals(Mesh *mesh);
func Mesh GenMeshPoly(int sides, float radius);
func Mesh GenMeshPlane(float width, float length, int resX, int resZ);
func Mesh GenMeshCube(float width, float height, float length);
func Mesh GenMeshSphere(float radius, int rings, int slices);
func Mesh GenMeshHemiSphere(float radius, int rings, int slices);
func Mesh GenMeshCylinder(float radius, float height, int slices);
func Mesh GenMeshCone(float radius, float height, int slices);
func Mesh GenMeshTorus(float radius, float size, int radSeg, int sides);
func Mesh GenMeshKnot(float radius, float size, int radSeg, int sides);
func Mesh GenMeshHeightmap(Image heightmap, Vector3 size);
func Mesh GenMeshCubicmap(Image cubicmap, Vector3 cubeSize);
func Material *LoadMaterials(byte *fileName, int *materialCount);
func Material LoadMaterialDefault();
func void UnloadMaterial(Material material);
func void SetMaterialTexture(Material *material, int mapType, Texture2D texture);
func void SetModelMeshMaterial(Model *model, int meshId, int materialId);
func ModelAnimation *LoadModelAnimations(byte *fileName, int *animsCount);
func void UpdateModelAnimation(Model model, ModelAnimation anim, int frame);
func void UnloadModelAnimation(ModelAnimation anim);
func void UnloadModelAnimations(ModelAnimation* animations, uint count);
func bool IsModelAnimationValid(Model model, ModelAnimation anim);
func bool CheckCollisionSpheres(Vector3 center1, float radius1, Vector3 center2, float radius2);
func bool CheckCollisionBoxes(BoundingBox box1, BoundingBox box2);
func bool CheckCollisionBoxSphere(BoundingBox box, Vector3 center, float radius);
func RayCollision GetRayCollisionSphere(Ray ray, Vector3 center, float radius);
func RayCollision GetRayCollisionBox(Ray ray, BoundingBox box);
func RayCollision GetRayCollisionModel(Ray ray, Model model);
func RayCollision GetRayCollisionMesh(Ray ray, Mesh mesh, Matrix transform);
func RayCollision GetRayCollisionTriangle(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3);
func RayCollision GetRayCollisionQuad(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4);
func void InitAudioDevice();
func void CloseAudioDevice();
func bool IsAudioDeviceReady();
func void SetMasterVolume(float volume);
func Wave LoadWave(byte *fileName);
func Wave LoadWaveFromMemory(byte *fileType, byte *fileData, int dataSize);
func Sound LoadSound(byte *fileName);
func Sound LoadSoundFromWave(Wave wave);
func void UpdateSound(Sound sound, void *data, int samplesCount);
func void UnloadWave(Wave wave);
func void UnloadSound(Sound sound);
func bool ExportWave(Wave wave, byte *fileName);
func bool ExportWaveAsCode(Wave wave, byte *fileName);
func void PlaySound(Sound sound);
func void StopSound(Sound sound);
func void PauseSound(Sound sound);
func void ResumeSound(Sound sound);
func void PlaySoundMulti(Sound sound);
func void StopSoundMulti();
func int GetSoundsPlaying();
func bool IsSoundPlaying(Sound sound);
func void SetSoundVolume(Sound sound, float volume);
func void SetSoundPitch(Sound sound, float pitch);
func void WaveFormat(Wave *wave, int sampleRate, int sampleSize, int channels);
func Wave WaveCopy(Wave wave);
func void WaveCrop(Wave *wave, int initSample, int finalSample);
func float *LoadWaveSamples(Wave wave);
func void UnloadWaveSamples(float *samples);
func Music LoadMusicStream(byte *fileName);
func Music LoadMusicStreamFromMemory(byte *fileType, byte *data, int dataSize);
func void UnloadMusicStream(Music music);
func void PlayMusicStream(Music music);
func bool IsMusicStreamPlaying(Music music);
func void UpdateMusicStream(Music music);
func void StopMusicStream(Music music);
func void PauseMusicStream(Music music);
func void ResumeMusicStream(Music music);
func void SetMusicVolume(Music music, float volume);
func void SetMusicPitch(Music music, float pitch);
func float GetMusicTimeLength(Music music);
func float GetMusicTimePlayed(Music music);
func AudioStream LoadAudioStream(uint sampleRate, uint sampleSize, uint channels);
func void UnloadAudioStream(AudioStream stream);
func void UpdateAudioStream(AudioStream stream, void *data, int samplesCount);
func bool IsAudioStreamProcessed(AudioStream stream);
func void PlayAudioStream(AudioStream stream);
func void PauseAudioStream(AudioStream stream);
func void ResumeAudioStream(AudioStream stream);
func bool IsAudioStreamPlaying(AudioStream stream);
func void StopAudioStream(AudioStream stream);
func void SetAudioStreamVolume(AudioStream stream, float volume);
func void SetAudioStreamPitch(AudioStream stream, float pitch);
func void SetAudioStreamBufferSizeDefault(int size);

func void InitWindow(int width, int height, byte *title);
func bool WindowShouldClose();
func void CloseWindow();
func bool IsWindowReady();
func bool IsWindowFullscreen();
func bool IsWindowHidden();
func bool IsWindowMinimized();
func bool IsWindowMaximized();
func bool IsWindowFocused();
func bool IsWindowResized();
func bool IsWindowState(uint flag);
func void SetWindowState(uint flags);
func void ClearWindowState(uint flags);
func void ToggleFullscreen();
func void MaximizeWindow();
func void MinimizeWindow();
func void RestoreWindow();
func void SetWindowIcon(Image image);
func void SetWindowTitle(byte *title);
func void SetWindowPosition(int x, int y);
func void SetWindowMonitor(int monitor);
func void SetWindowMinSize(int width, int height);
func void SetWindowSize(int width, int height);
func void *GetWindowHandle();
func int GetScreenWidth();
func int GetScreenHeight();
func int GetMonitorCount();
func int GetCurrentMonitor();
func Vector2 GetMonitorPosition(int monitor);
func int GetMonitorWidth(int monitor);
func int GetMonitorHeight(int monitor);
func int GetMonitorPhysicalWidth(int monitor);
func int GetMonitorPhysicalHeight(int monitor);
func int GetMonitorRefreshRate(int monitor);
func Vector2 GetWindowPosition();
func Vector2 GetWindowScaleDPI();
func byte *GetMonitorName(int monitor);
func void SetClipboardText(byte *text);
func byte *GetClipboardText();
func void SwapScreenBuffer();
func void PollInputEvents();
func void WaitTime(float ms);
func void ShowCursor();
func void HideCursor();
func bool IsCursorHidden();
func void EnableCursor();
func void DisableCursor();
func bool IsCursorOnScreen();
func void ClearBackground(Color color);
func void BeginDrawing();
func void EndDrawing();
func void BeginMode2D(Camera2D camera);
func void EndMode2D();
func void BeginMode3D(Camera3D camera);
func void EndMode3D();
func void BeginTextureMode(RenderTexture2D target);
func void EndTextureMode();
func void BeginShaderMode(Shader shader);
func void EndShaderMode();
func void BeginBlendMode(int mode);
func void EndBlendMode();
func void BeginScissorMode(int x, int y, int width, int height);
func void EndScissorMode();
func void BeginVrStereoMode(VrStereoConfig config);
func void EndVrStereoMode();
func VrStereoConfig LoadVrStereoConfig(VrDeviceInfo device);
func void UnloadVrStereoConfig(VrStereoConfig config);
func Shader LoadShader(byte *vsFileName, byte *fsFileName);
func Shader LoadShaderFromMemory(byte *vsCode, byte *fsCode);
func int GetShaderLocation(Shader shader, byte *uniformName);
func int GetShaderLocationAttrib(Shader shader, byte *attribName);
func void SetShaderValue(Shader shader, int locIndex, void *value, int uniformType);
func void SetShaderValueV(Shader shader, int locIndex, void *value, int uniformType, int count);
func void SetShaderValueMatrix(Shader shader, int locIndex, Matrix mat);
func void SetShaderValueTexture(Shader shader, int locIndex, Texture2D texture);
func void UnloadShader(Shader shader);
func Ray GetMouseRay(Vector2 mousePosition, Camera camera);
func Matrix GetCameraMatrix(Camera camera);
func Matrix GetCameraMatrix2D(Camera2D camera);
func Vector2 GetWorldToScreen(Vector3 position, Camera camera);
func Vector2 GetWorldToScreenEx(Vector3 position, Camera camera, int width, int height);
func Vector2 GetWorldToScreen2D(Vector2 position, Camera2D camera);
func Vector2 GetScreenToWorld2D(Vector2 position, Camera2D camera);
func void SetTargetFPS(int fps);
func int GetFPS();
func float GetFrameTime();
func double GetTime();
func int GetRandomValue(int min, int max);
func void TakeScreenshot(byte *fileName);
func void SetConfigFlags(uint flags);
func void TraceLog(int logLevel, byte *text, ...);
func void SetTraceLogLevel(int logLevel);
func void *MemAlloc(int size);
func void *MemRealloc(void *ptr, int size);
func void MemFree(void *ptr);
func void SetTraceLogCallback(TraceLogCallback callback);
func void SetLoadFileDataCallback(LoadFileDataCallback callback);
func void SetSaveFileDataCallback(SaveFileDataCallback callback);
func void SetLoadFileTextCallback(LoadFileTextCallback callback);
func void SetSaveFileTextCallback(SaveFileTextCallback callback);
func byte *LoadFileData(byte *fileName, uint *bytesRead);
func void UnloadFileData(byte *data);
func bool SaveFileData(byte *fileName, void *data, uint bytesToWrite);
func byte *LoadFileText(byte *fileName);
func void UnloadFileText(byte *text);
func bool SaveFileText(byte *fileName, byte *text);
func bool FileExists(byte *fileName);
func bool DirectoryExists(byte *dirPath);
func bool IsFileExtension(byte *fileName, byte *ext);
func byte *GetFileExtension(byte *fileName);
func byte *GetFileName(byte *filePath);
func byte *GetFileNameWithoutExt(byte *filePath);
func byte *GetDirectoryPath(byte *filePath);
func byte *GetPrevDirectoryPath(byte *dirPath);
func byte *GetWorkingDirectory();
func byte **GetDirectoryFiles(byte *dirPath, int *count);
func void ClearDirectoryFiles();
func bool ChangeDirectory(byte *dir);
func bool IsFileDropped();
func byte **GetDroppedFiles(int *count);
func void ClearDroppedFiles();
func long GetFileModTime(byte *fileName);
func byte *CompressData(byte *data, int dataLength, int *compDataLength);
func byte *DecompressData(byte *compData, int compDataLength, int *dataLength);
func bool SaveStorageValue(uint position, int value);
func int LoadStorageValue(uint position);
func void OpenURL(byte *url);
func bool IsKeyPressed(KeyboardKey key);
func bool IsKeyDown(KeyboardKey key);
func bool IsKeyReleased(KeyboardKey key);
func bool IsKeyUp(KeyboardKey key);
func void SetExitKey(KeyboardKey key);
func int GetKeyPressed();
func int GetCharPressed();
func bool IsGamepadAvailable(int gamepad);
func bool IsGamepadName(int gamepad, byte *name);
func byte *GetGamepadName(int gamepad);
func bool IsGamepadButtonPressed(int gamepad, MouseButton button);
func bool IsGamepadButtonDown(int gamepad, MouseButton button);
func bool IsGamepadButtonReleased(int gamepad, MouseButton button);
func bool IsGamepadButtonUp(int gamepad, MouseButton button);
func int GetGamepadButtonPressed();
func int GetGamepadAxisCount(int gamepad);
func float GetGamepadAxisMovement(int gamepad, int axis);
func int SetGamepadMappings(byte *mappings);
func bool IsMouseButtonPressed(MouseButton button);
func bool IsMouseButtonDown(MouseButton button);
func bool IsMouseButtonReleased(MouseButton button);
func bool IsMouseButtonUp(MouseButton button);
func int GetMouseX();
func int GetMouseY();
func Vector2 GetMousePosition();
func Vector2 GetMouseDelta();
func void SetMousePosition(int x, int y);
func void SetMouseOffset(int offsetX, int offsetY);
func void SetMouseScale(float scaleX, float scaleY);
func float GetMouseWheelMove();
func void SetMouseCursor(int cursor);
func int GetTouchX();
func int GetTouchY();
func Vector2 GetTouchPosition(int index);
func void SetGesturesEnabled(uint flags);
func bool IsGestureDetected(int gesture);
func int GetGestureDetected();
func int GetTouchPointsCount();
func float GetGestureHoldDuration();
func Vector2 GetGestureDragVector();
func float GetGestureDragAngle();
func Vector2 GetGesturePinchVector();
func float GetGesturePinchAngle();
func void SetCameraMode(Camera camera, CameraMode mode);
func void UpdateCamera(Camera *camera);
func void SetCameraPanControl(int keyPan);
func void SetCameraAltControl(int keyAlt);
func void SetCameraSmoothZoomControl(int keySmoothZoom);
func void SetCameraMoveControls(int keyFront, int keyBack, int keyRight, int keyLeft, int keyUp, int keyDown);
func void SetShapesTexture(Texture2D texture, Rectangle source);
func void DrawPixel(int posX, int posY, Color color);
func void DrawPixelV(Vector2 position, Color color);
func void DrawLine(int startPosX, int startPosY, int endPosX, int endPosY, Color color);
func void DrawLineV(Vector2 startPos, Vector2 endPos, Color color);
func void DrawLineEx(Vector2 startPos, Vector2 endPos, float thick, Color color);
func void DrawLineBezier(Vector2 startPos, Vector2 endPos, float thick, Color color);
func void DrawLineBezierQuad(Vector2 startPos, Vector2 endPos, Vector2 controlPos, float thick, Color color);
func void DrawLineStrip(Vector2 *points, int pointsCount, Color color);
func void DrawCircle(int centerX, int centerY, float radius, Color color);
func void DrawCircleSector(Vector2 center, float radius, float startAngle, float endAngle, int segments, Color color);
func void DrawCircleSectorLines(Vector2 center, float radius, float startAngle, float endAngle, int segments, Color color);
func void DrawCircleGradient(int centerX, int centerY, float radius, Color color1, Color color2);
func void DrawCircleV(Vector2 center, float radius, Color color);
func void DrawCircleLines(int centerX, int centerY, float radius, Color color);
func void DrawEllipse(int centerX, int centerY, float radiusH, float radiusV, Color color);
func void DrawEllipseLines(int centerX, int centerY, float radiusH, float radiusV, Color color);
func void DrawRing(Vector2 center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, Color color);
func void DrawRingLines(Vector2 center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, Color color);
func void DrawRectangle(int posX, int posY, int width, int height, Color color);
func void DrawRectangleV(Vector2 position, Vector2 size, Color color);
func void DrawRectangleRec(Rectangle rec, Color color);
func void DrawRectanglePro(Rectangle rec, Vector2 origin, float rotation, Color color);
func void DrawRectangleGradientV(int posX, int posY, int width, int height, Color color1, Color color2);
func void DrawRectangleGradientH(int posX, int posY, int width, int height, Color color1, Color color2);
func void DrawRectangleGradientEx(Rectangle rec, Color col1, Color col2, Color col3, Color col4);
func void DrawRectangleLines(int posX, int posY, int width, int height, Color color);
func void DrawRectangleLinesEx(Rectangle rec, float lineThick, Color color);
func void DrawRectangleRounded(Rectangle rec, float roundness, int segments, Color color);
func void DrawRectangleRoundedLines(Rectangle rec, float roundness, int segments, float lineThick, Color color);
func void DrawTriangle(Vector2 v1, Vector2 v2, Vector2 v3, Color color);
func void DrawTriangleLines(Vector2 v1, Vector2 v2, Vector2 v3, Color color);
func void DrawTriangleFan(Vector2 *points, int pointsCount, Color color);
func void DrawTriangleStrip(Vector2 *points, int pointsCount, Color color);
func void DrawPoly(Vector2 center, int sides, float radius, float rotation, Color color);
func void DrawPolyLines(Vector2 center, int sides, float radius, float rotation, Color color);
func void DrawPolyLinesEx(Vector2 center, int sides, float radius, float rotation, float lineThick, Color color);
func bool CheckCollisionRecs(Rectangle rec1, Rectangle rec2);
func bool CheckCollisionCircles(Vector2 center1, float radius1, Vector2 center2, float radius2);
func bool CheckCollisionCircleRec(Vector2 center, float radius, Rectangle rec);
func bool CheckCollisionPointRec(Vector2 point, Rectangle rec);
func bool CheckCollisionPointCircle(Vector2 point, Vector2 center, float radius);
func bool CheckCollisionPointTriangle(Vector2 point, Vector2 p1, Vector2 p2, Vector2 p3);
func bool CheckCollisionLines(Vector2 startPos1, Vector2 endPos1, Vector2 startPos2, Vector2 endPos2, Vector2 *collisionPoint);
func Rectangle GetCollisionRec(Rectangle rec1, Rectangle rec2);
func Image LoadImage(byte *fileName);
func Image LoadImageRaw(byte *fileName, int width, int height, int format, int headerSize);
func Image LoadImageAnim(byte *fileName, int *frames);
func Image LoadImageFromMemory(byte *fileType, byte *fileData, int dataSize);
func Image LoadImageFromTexture(Texture2D texture);
func Image LoadImageFromScreen();
func void UnloadImage(Image image);
func bool ExportImage(Image image, byte *fileName);
func bool ExportImageAsCode(Image image, byte *fileName);
func Image GenImageColor(int width, int height, Color color);
func Image GenImageGradientV(int width, int height, Color top, Color bottom);
func Image GenImageGradientH(int width, int height, Color left, Color right);
func Image GenImageGradientRadial(int width, int height, float density, Color inner, Color outer);
func Image GenImageChecked(int width, int height, int checksX, int checksY, Color col1, Color col2);
func Image GenImageWhiteNoise(int width, int height, float factor);
func Image GenImagePerlinNoise(int width, int height, int offsetX, int offsetY, float scale);
func Image GenImageCellular(int width, int height, int tileSize);
func Image ImageCopy(Image image);
func Image ImageFromImage(Image image, Rectangle rec);
func Image ImageText(byte *text, int fontSize, Color color);
func Image ImageTextEx(Font font, byte *text, float fontSize, float spacing, Color tint);
func void ImageFormat(Image *image, int newFormat);
func void ImageToPOT(Image *image, Color fill);
func void ImageCrop(Image *image, Rectangle crop);
func void ImageAlphaCrop(Image *image, float threshold);
func void ImageAlphaClear(Image *image, Color color, float threshold);
func void ImageAlphaMask(Image *image, Image alphaMask);
func void ImageAlphaPremultiply(Image *image);
func void ImageResize(Image *image, int newWidth, int newHeight);
func void ImageResizeNN(Image *image, int newWidth,int newHeight);
func void ImageResizeCanvas(Image *image, int newWidth, int newHeight, int offsetX, int offsetY, Color fill);
func void ImageMipmaps(Image *image);
func void ImageDither(Image *image, int rBpp, int gBpp, int bBpp, int aBpp);
func void ImageFlipVertical(Image *image);
func void ImageFlipHorizontal(Image *image);
func void ImageRotateCW(Image *image);
func void ImageRotateCCW(Image *image);
func void ImageColorTint(Image *image, Color color);
func void ImageColorInvert(Image *image);
func void ImageColorGrayscale(Image *image);
func void ImageColorContrast(Image *image, float contrast);
func void ImageColorBrightness(Image *image, int brightness);
func void ImageColorReplace(Image *image, Color color, Color replace);
func Color *LoadImageColors(Image image);
func Color *LoadImagePalette(Image image, int maxPaletteSize, int *colorsCount);
func void UnloadImageColors(Color *colors);
func void UnloadImagePalette(Color *colors);
func Rectangle GetImageAlphaBorder(Image image, float threshold);
func void ImageClearBackground(Image *dst, Color color);
func void ImageDrawPixel(Image *dst, int posX, int posY, Color color);
func void ImageDrawPixelV(Image *dst, Vector2 position, Color color);
func void ImageDrawLine(Image *dst, int startPosX, int startPosY, int endPosX, int endPosY, Color color);
func void ImageDrawLineV(Image *dst, Vector2 start, Vector2 end, Color color);
func void ImageDrawCircle(Image *dst, int centerX, int centerY, int radius, Color color);
func void ImageDrawCircleV(Image *dst, Vector2 center, int radius, Color color);
func void ImageDrawRectangle(Image *dst, int posX, int posY, int width, int height, Color color);
func void ImageDrawRectangleV(Image *dst, Vector2 position, Vector2 size, Color color);
func void ImageDrawRectangleRec(Image *dst, Rectangle rec, Color color);
func void ImageDrawRectangleLines(Image *dst, Rectangle rec, int thick, Color color);
func void ImageDraw(Image *dst, Image src, Rectangle srcRec, Rectangle dstRec, Color tint);
func void ImageDrawText(Image *dst, byte *text, int posX, int posY, int fontSize, Color color);
func void ImageDrawTextEx(Image *dst, Font font, byte *text, Vector2 position, float fontSize, float spacing, Color tint);
func Texture2D LoadTexture(byte *fileName);
func Texture2D LoadTextureFromImage(Image image);
func TextureCubemap LoadTextureCubemap(Image image, int layout);
func RenderTexture2D LoadRenderTexture(int width, int height);
func void UnloadTexture(Texture2D texture);
func void UnloadRenderTexture(RenderTexture2D target);
func void UpdateTexture(Texture2D texture, void *pixels);
func void UpdateTextureRec(Texture2D texture, Rectangle rec, void *pixels);
func void GenTextureMipmaps(Texture2D *texture);
func void SetTextureFilter(Texture2D texture, int filter);
func void SetTextureWrap(Texture2D texture, int wrap);
func void DrawTexture(Texture2D texture, int posX, int posY, Color tint);
func void DrawTextureV(Texture2D texture, Vector2 position, Color tint);
func void DrawTextureEx(Texture2D texture, Vector2 position, float rotation, float scale, Color tint);
func void DrawTextureRec(Texture2D texture, Rectangle source, Vector2 position, Color tint);
func void DrawTextureQuad(Texture2D texture, Vector2 tiling, Vector2 offset, Rectangle quad, Color tint);
func void DrawTextureTiled(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, float rotation, float scale, Color tint);
func void DrawTexturePro(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, float rotation, Color tint);
func void DrawTextureNPatch(Texture2D texture, NPatchInfo nPatchInfo, Rectangle dest, Vector2 origin, float rotation, Color tint);
func void DrawTexturePoly(Texture2D texture, Vector2 center, Vector2 *points, Vector2 *texcoords, int pointsCount, Color tint);
func Color Fade(Color color, float alpha);
func int ColorToInt(Color color);
func Vector4 ColorNormalize(Color color);
func Color ColorFromNormalized(Vector4 normalized);
func Vector3 ColorToHSV(Color color);
func Color ColorFromHSV(float hue, float saturation, float value);
func Color ColorAlpha(Color color, float alpha);
func Color ColorAlphaBlend(Color dst, Color src, Color tint);
func Color GetColor(int hexValue);
func Color GetPixelColor(void *srcPtr, int format);
func void SetPixelColor(void *dstPtr, Color color, int format);
func int GetPixelDataSize(int width, int height, int format);
func Font GetFontDefault();
func Font LoadFont(byte *fileName);
func Font LoadFontEx(byte *fileName, int fontSize, int *fontChars, int charsCount);
func Font LoadFontFromImage(Image image, Color key, int firstChar);
func Font LoadFontFromMemory(byte *fileType, byte *fileData, int dataSize, int fontSize, int *fontChars, int charsCount);
func CharInfo *LoadFontData(byte *fileData, int dataSize, int fontSize, int *fontChars, int charsCount, int type);
func Image GenImageFontAtlas(CharInfo *chars, Rectangle **recs, int charsCount, int fontSize, int padding, int packMethod);
func void UnloadFontData(CharInfo *chars, int charsCount);
func void UnloadFont(Font font);
func void DrawFPS(int posX, int posY);
func void DrawText(byte *text, int posX, int posY, int fontSize, Color color);
func void DrawTextEx(Font font, byte *text, Vector2 position, float fontSize, float spacing, Color tint);
func void DrawTextRec(Font font, byte *text, Rectangle rec, float fontSize, float spacing, bool wordWrap, Color tint);
func void DrawTextRecEx(Font font, byte *text, Rectangle rec, float fontSize, float spacing, bool wordWrap, Color tint, int selectStart, int selectLength, Color selectTint, Color selectBackTint);
func void DrawTextCodepoint(Font font, int codepoint, Vector2 position, float fontSize, Color tint);
func int MeasureText(byte *text, int fontSize);
func Vector2 MeasureTextEx(Font font, byte *text, float fontSize, float spacing);
func int GetGlyphIndex(Font font, int codepoint);
func int TextCopy(byte *dst, byte *src);
func bool TextIsEqual(byte *text1, byte *text2);
func uint TextLength(byte *text);
func byte *TextFormat(byte *text, ...);
func byte *TextSubtext(byte *text, int position, int length);
func byte *TextReplace(byte *text, byte *replace, byte *by);
func byte *TextInsert(byte *text, byte *insert, int position);
func byte *TextJoin(byte **textList, int count, byte *delimiter);
func byte **TextSplit(byte *text, byte delimiter, int *count);
func void TextAppend(byte *text, byte *append, int *position);
func int TextFindIndex(byte *text, byte *find);
func byte *TextToUpper(byte *text);
func byte *TextToLower(byte *text);
func byte *TextToPascal(byte *text);
func int TextToInteger(byte *text);
func byte *TextToUtf8(int *codepoints, int length);
func int *LoadCodepoints(byte *text, int *count);
func void UnloadCodepoints(int *codepoints);
func int GetCodepointsCount(byte *text);
func int GetCodepoint(byte *text, int *bytesProcessed);
func byte *CodepointToUtf8(int codepoint, int *byteLength);
func void DrawLine3D(Vector3 startPos, Vector3 endPos, Color color);
func void DrawPoint3D(Vector3 position, Color color);
func void DrawCircle3D(Vector3 center, float radius, Vector3 rotationAxis, float rotationAngle, Color color);
func void DrawTriangle3D(Vector3 v1, Vector3 v2, Vector3 v3, Color color);
func void DrawTriangleStrip3D(Vector3 *points, int pointsCount, Color color);
func void DrawCube(Vector3 position, float width, float height, float length, Color color);
func void DrawCubeV(Vector3 position, Vector3 size, Color color);
func void DrawCubeWires(Vector3 position, float width, float height, float length, Color color);
func void DrawCubeWiresV(Vector3 position, Vector3 size, Color color);
func void DrawCubeTexture(Texture2D texture, Vector3 position, float width, float height, float length, Color color);
func void DrawSphere(Vector3 centerPos, float radius, Color color);
func void DrawSphereEx(Vector3 centerPos, float radius, int rings, int slices, Color color);
func void DrawSphereWires(Vector3 centerPos, float radius, int rings, int slices, Color color);
func void DrawCylinder(Vector3 position, float radiusTop, float radiusBottom, float height, int slices, Color color);
func void DrawCylinderWires(Vector3 position, float radiusTop, float radiusBottom, float height, int slices, Color color);
func void DrawPlane(Vector3 centerPos, Vector2 size, Color color);
func void DrawRay(Ray ray, Color color);
func void DrawGrid(int slices, float spacing);
func Model LoadModel(byte *fileName);
func Model LoadModelFromMesh(Mesh mesh);
func void UnloadModel(Model model);
func void UnloadModelKeepMeshes(Model model);
func BoundingBox GetModelBoundingBox(Model model);
func void DrawModel(Model model, Vector3 position, float scale, Color tint);
func void DrawModelEx(Model model, Vector3 position, Vector3 rotationAxis, float rotationAngle, Vector3 scale, Color tint);
func void DrawModelWires(Model model, Vector3 position, float scale, Color tint);
func void DrawModelWiresEx(Model model, Vector3 position, Vector3 rotationAxis, float rotationAngle, Vector3 scale, Color tint);
func void DrawBoundingBox(BoundingBox box, Color color);
func void DrawBillboard(Camera camera, Texture2D texture, Vector3 position, float size, Color tint);
func void DrawBillboardRec(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector2 size, Color tint);
func void DrawBillboardPro(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector2 size, Vector2 origin, float rotation, Color tint);
func void UploadMesh(Mesh *mesh, bool dynamic);
func void UpdateMeshBuffer(Mesh mesh, int index, void *data, int dataSize, int offset);
func void UnloadMesh(Mesh mesh);
func void DrawMesh(Mesh mesh, Material material, Matrix transform);
func void DrawMeshInstanced(Mesh mesh, Material material, Matrix *transforms, int instances);
func bool ExportMesh(Mesh mesh, byte *fileName);
func BoundingBox GetMeshBoundingBox(Mesh mesh);
func void GenMeshTangents(Mesh *mesh);
func void GenMeshBinormals(Mesh *mesh);
func Mesh GenMeshPoly(int sides, float radius);
func Mesh GenMeshPlane(float width, float length, int resX, int resZ);
func Mesh GenMeshCube(float width, float height, float length);
func Mesh GenMeshSphere(float radius, int rings, int slices);
func Mesh GenMeshHemiSphere(float radius, int rings, int slices);
func Mesh GenMeshCylinder(float radius, float height, int slices);
func Mesh GenMeshCone(float radius, float height, int slices);
func Mesh GenMeshTorus(float radius, float size, int radSeg, int sides);
func Mesh GenMeshKnot(float radius, float size, int radSeg, int sides);
func Mesh GenMeshHeightmap(Image heightmap, Vector3 size);
func Mesh GenMeshCubicmap(Image cubicmap, Vector3 cubeSize);
func Material *LoadMaterials(byte *fileName, int *materialCount);
func Material LoadMaterialDefault();
func void UnloadMaterial(Material material);
func void SetMaterialTexture(Material *material, int mapType, Texture2D texture);
func void SetModelMeshMaterial(Model *model, int meshId, int materialId);
func ModelAnimation *LoadModelAnimations(byte *fileName, int *animsCount);
func void UpdateModelAnimation(Model model, ModelAnimation anim, int frame);
func void UnloadModelAnimation(ModelAnimation anim);
func void UnloadModelAnimations(ModelAnimation* animations, uint count);
func bool IsModelAnimationValid(Model model, ModelAnimation anim);
func bool CheckCollisionSpheres(Vector3 center1, float radius1, Vector3 center2, float radius2);
func bool CheckCollisionBoxes(BoundingBox box1, BoundingBox box2);
func bool CheckCollisionBoxSphere(BoundingBox box, Vector3 center, float radius);
func RayCollision GetRayCollisionSphere(Ray ray, Vector3 center, float radius);
func RayCollision GetRayCollisionBox(Ray ray, BoundingBox box);
func RayCollision GetRayCollisionModel(Ray ray, Model model);
func RayCollision GetRayCollisionMesh(Ray ray, Mesh mesh, Matrix transform);
func RayCollision GetRayCollisionTriangle(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3);
func RayCollision GetRayCollisionQuad(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4);
func void InitAudioDevice();
func void CloseAudioDevice();
func bool IsAudioDeviceReady();
func void SetMasterVolume(float volume);
func Wave LoadWave(byte *fileName);
func Wave LoadWaveFromMemory(byte *fileType, byte *fileData, int dataSize);
func Sound LoadSound(byte *fileName);
func Sound LoadSoundFromWave(Wave wave);
func void UpdateSound(Sound sound, void *data, int samplesCount);
func void UnloadWave(Wave wave);
func void UnloadSound(Sound sound);
func bool ExportWave(Wave wave, byte *fileName);
func bool ExportWaveAsCode(Wave wave, byte *fileName);
func void PlaySound(Sound sound);
func void StopSound(Sound sound);
func void PauseSound(Sound sound);
func void ResumeSound(Sound sound);
func void PlaySoundMulti(Sound sound);
func void StopSoundMulti();
func int GetSoundsPlaying();
func bool IsSoundPlaying(Sound sound);
func void SetSoundVolume(Sound sound, float volume);
func void SetSoundPitch(Sound sound, float pitch);
func void WaveFormat(Wave *wave, int sampleRate, int sampleSize, int channels);
func Wave WaveCopy(Wave wave);
func void WaveCrop(Wave *wave, int initSample, int finalSample);
func float *LoadWaveSamples(Wave wave);
func void UnloadWaveSamples(float *samples);
func Music LoadMusicStream(byte *fileName);
func Music LoadMusicStreamFromMemory(byte *fileType, byte *data, int dataSize);
func void UnloadMusicStream(Music music);
func void PlayMusicStream(Music music);
func bool IsMusicStreamPlaying(Music music);
func void UpdateMusicStream(Music music);
func void StopMusicStream(Music music);
func void PauseMusicStream(Music music);
func void ResumeMusicStream(Music music);
func void SetMusicVolume(Music music, float volume);
func void SetMusicPitch(Music music, float pitch);
func float GetMusicTimeLength(Music music);
func float GetMusicTimePlayed(Music music);
func AudioStream LoadAudioStream(uint sampleRate, uint sampleSize, uint channels);
func void UnloadAudioStream(AudioStream stream);
func void UpdateAudioStream(AudioStream stream, void *data, int samplesCount);
func bool IsAudioStreamProcessed(AudioStream stream);
func void PlayAudioStream(AudioStream stream);
func void PauseAudioStream(AudioStream stream);
func void ResumeAudioStream(AudioStream stream);
func bool IsAudioStreamPlaying(AudioStream stream);
func void StopAudioStream(AudioStream stream);
func void SetAudioStreamVolume(AudioStream stream, float volume);
func void SetAudioStreamPitch(AudioStream stream, float pitch);
func void SetAudioStreamBufferSizeDefault(int size);
