module raylibc3;

func void InitWindow(CInt width, CInt height, CChar *title);
func bool WindowShouldClose();
func void CloseWindow();
func bool IsWindowReady();
func bool IsWindowFullscreen();
func bool IsWindowHidden();
func bool IsWindowMinimized();
func bool IsWindowMaximized();
func bool IsWindowFocused();
func bool IsWindowResized();
func bool IsWindowState(CUInt flag);
func void SetWindowState(CUInt flags);
func void ClearWindowState(CUInt flags);
func void ToggleFullscreen();
func void MaximizeWindow();
func void MinimizeWindow();
func void RestoreWindow();
func void SetWindowIcon(Image image);
func void SetWindowTitle(CChar *title);
func void SetWindowPosition(CInt x, CInt y);
func void SetWindowMonitor(CInt monitor);
func void SetWindowMinSize(CInt width, CInt height);
func void SetWindowSize(CInt width, CInt height);
func void *GetWindowHandle();
func CInt GetScreenWidth();
func CInt GetScreenHeight();
func CInt GetMonitorCount();
func CInt GetCurrentMonitor();
func Vector2 GetMonitorPosition(CInt monitor);
func CInt GetMonitorWidth(CInt monitor);
func CInt GetMonitorHeight(CInt monitor);
func CInt GetMonitorPhysicalWidth(CInt monitor);
func CInt GetMonitorPhysicalHeight(CInt monitor);
func CInt GetMonitorRefreshRate(CInt monitor);
func Vector2 GetWindowPosition();
func Vector2 GetWindowScaleDPI();
func CChar *GetMonitorName(CInt monitor);
func void SetClipboardText(CChar *text);
func CChar *GetClipboardText();
func void SwapScreenBuffer();
func void PollInputEvents();
func void WaitTime(CFloat ms);
func void ShowCursor();
func void HideCursor();
func bool IsCursorHidden();
func void EnableCursor();
func void DisableCursor();
func bool IsCursorOnScreen();
func void ClearBackground(Color color);
func void BeginDrawing();
func void EndDrawing();
func void BeginMode2D(Camera2D camera);
func void EndMode2D();
func void BeginMode3D(Camera3D camera);
func void EndMode3D();
func void BeginTextureMode(RenderTexture2D target);
func void EndTextureMode();
func void BeginShaderMode(Shader shader);
func void EndShaderMode();
func void BeginBlendMode(CInt mode);
func void EndBlendMode();
func void BeginScissorMode(CInt x, CInt y, CInt width, CInt height);
func void EndScissorMode();
func void BeginVrStereoMode(VrStereoConfig config);
func void EndVrStereoMode();
func VrStereoConfig LoadVrStereoConfig(VrDeviceInfo device);
func void UnloadVrStereoConfig(VrStereoConfig config);
func Shader LoadShader(CChar *vsFileName, CChar *fsFileName);
func Shader LoadShaderFromMemory(CChar *vsCode, CChar *fsCode);
func CInt GetShaderLocation(Shader shader, CChar *uniformName);
func CInt GetShaderLocationAttrib(Shader shader, CChar *attribName);
func void SetShaderValue(Shader shader, CInt locIndex, void *value, CInt uniformType);
func void SetShaderValueV(Shader shader, CInt locIndex, void *value, CInt uniformType, CInt count);
func void SetShaderValueMatrix(Shader shader, CInt locIndex, Matrix mat);
func void SetShaderValueTexture(Shader shader, CInt locIndex, Texture2D texture);
func void UnloadShader(Shader shader);
func Ray GetMouseRay(Vector2 mousePosition, Camera camera);
func Matrix GetCameraMatrix(Camera camera);
func Matrix GetCameraMatrix2D(Camera2D camera);
func Vector2 GetWorldToScreen(Vector3 position, Camera camera);
func Vector2 GetWorldToScreenEx(Vector3 position, Camera camera, CInt width, CInt height);
func Vector2 GetWorldToScreen2D(Vector2 position, Camera2D camera);
func Vector2 GetScreenToWorld2D(Vector2 position, Camera2D camera);
func void SetTargetFPS(CInt fps);
func CInt GetFPS();
func CFloat GetFrameTime();
func CDouble GetTime();
func CInt GetRandomValue(CInt min, CInt max);
func void TakeScreenshot(CChar *fileName);
func void SetConfigFlags(CUInt flags);
func void TraceLog(CInt logLevel, CChar *text, ...);
func void SetTraceLogLevel(CInt logLevel);
func void *MemAlloc(CInt size);
func void *MemRealloc(void *ptr, CInt size);
func void MemFree(void *ptr);
func void SetTraceLogCallback(TraceLogCallback callback);
func void SetLoadFileDataCallback(LoadFileDataCallback callback);
func void SetSaveFileDataCallback(SaveFileDataCallback callback);
func void SetLoadFileTextCallback(LoadFileTextCallback callback);
func void SetSaveFileTextCallback(SaveFileTextCallback callback);
func CChar *LoadFileData(CChar *fileName, CUInt *bytesRead);
func void UnloadFileData(CChar *data);
func bool SaveFileData(CChar *fileName, void *data, CUInt bytesToWrite);
func CChar *LoadFileText(CChar *fileName);
func void UnloadFileText(CChar *text);
func bool SaveFileText(CChar *fileName, CChar *text);
func bool FileExists(CChar *fileName);
func bool DirectoryExists(CChar *dirPath);
func bool IsFileExtension(CChar *fileName, CChar *ext);
func CChar *GetFileExtension(CChar *fileName);
func CChar *GetFileName(CChar *filePath);
func CChar *GetFileNameWithoutExt(CChar *filePath);
func CChar *GetDirectoryPath(CChar *filePath);
func CChar *GetPrevDirectoryPath(CChar *dirPath);
func CChar *GetWorkingDirectory();
func CChar **GetDirectoryFiles(CChar *dirPath, CInt *count);
func void ClearDirectoryFiles();
func bool ChangeDirectory(CChar *dir);
func bool IsFileDropped();
func CChar **GetDroppedFiles(CInt *count);
func void ClearDroppedFiles();
func CLong GetFileModTime(CChar *fileName);
func CChar *CompressData(CChar *data, CInt dataLength, CInt *compDataLength);
func CChar *DecompressData(CChar *compData, CInt compDataLength, CInt *dataLength);
func bool SaveStorageValue(CUInt position, CInt value);
func CInt LoadStorageValue(CUInt position);
func void OpenURL(CChar *url);
func bool IsKeyPressed(KeyboardKey key);
func bool IsKeyDown(KeyboardKey key);
func bool IsKeyReleased(KeyboardKey key);
func bool IsKeyUp(KeyboardKey key);
func void SetExitKey(KeyboardKey key);
func CInt GetKeyPressed();
func CInt GetCharPressed();
func bool IsGamepadAvailable(CInt gamepad);
func bool IsGamepadName(CInt gamepad, CChar *name);
func CChar *GetGamepadName(CInt gamepad);
func bool IsGamepadButtonPressed(CInt gamepad, MouseButton button);
func bool IsGamepadButtonDown(CInt gamepad, MouseButton button);
func bool IsGamepadButtonReleased(CInt gamepad, MouseButton button);
func bool IsGamepadButtonUp(CInt gamepad, MouseButton button);
func CInt GetGamepadButtonPressed();
func CInt GetGamepadAxisCount(CInt gamepad);
func CFloat GetGamepadAxisMovement(CInt gamepad, CInt axis);
func CInt SetGamepadMappings(CChar *mappings);
func bool IsMouseButtonPressed(MouseButton button);
func bool IsMouseButtonDown(MouseButton button);
func bool IsMouseButtonReleased(MouseButton button);
func bool IsMouseButtonUp(MouseButton button);
func CInt GetMouseX();
func CInt GetMouseY();
func Vector2 GetMousePosition();
func Vector2 GetMouseDelta();
func void SetMousePosition(CInt x, CInt y);
func void SetMouseOffset(CInt offsetX, CInt offsetY);
func void SetMouseScale(CFloat scaleX, CFloat scaleY);
func CFloat GetMouseWheelMove();
func void SetMouseCursor(CInt cursor);
func CInt GetTouchX();
func CInt GetTouchY();
func Vector2 GetTouchPosition(CInt index);
func void SetGesturesEnabled(CUInt flags);
func bool IsGestureDetected(CInt gesture);
func CInt GetGestureDetected();
func CInt GetTouchPointsCount();
func CFloat GetGestureHoldDuration();
func Vector2 GetGestureDragVector();
func CFloat GetGestureDragAngle();
func Vector2 GetGesturePinchVector();
func CFloat GetGesturePinchAngle();
func void SetCameraMode(Camera camera, CameraMode mode);
func void UpdateCamera(Camera *camera);
func void SetCameraPanControl(CInt keyPan);
func void SetCameraAltControl(CInt keyAlt);
func void SetCameraSmoothZoomControl(CInt keySmoothZoom);
func void SetCameraMoveControls(CInt keyFront, CInt keyBack, CInt keyRight, CInt keyLeft, CInt keyUp, CInt keyDown);
func void SetShapesTexture(Texture2D texture, Rectangle source);
func void DrawPixel(CInt posX, CInt posY, Color color);
func void DrawPixelV(Vector2 position, Color color);
func void DrawLine(CInt startPosX, CInt startPosY, CInt endPosX, CInt endPosY, Color color);
func void DrawLineV(Vector2 startPos, Vector2 endPos, Color color);
func void DrawLineEx(Vector2 startPos, Vector2 endPos, CFloat thick, Color color);
func void DrawLineBezier(Vector2 startPos, Vector2 endPos, CFloat thick, Color color);
func void DrawLineBezierQuad(Vector2 startPos, Vector2 endPos, Vector2 controlPos, CFloat thick, Color color);
func void DrawLineStrip(Vector2 *points, CInt pointsCount, Color color);
func void DrawCircle(CInt centerX, CInt centerY, CFloat radius, Color color);
func void DrawCircleSector(Vector2 center, CFloat radius, CFloat startAngle, CFloat endAngle, CInt segments, Color color);
func void DrawCircleSectorLines(Vector2 center, CFloat radius, CFloat startAngle, CFloat endAngle, CInt segments, Color color);
func void DrawCircleGradient(CInt centerX, CInt centerY, CFloat radius, Color color1, Color color2);
func void DrawCircleV(Vector2 center, CFloat radius, Color color);
func void DrawCircleLines(CInt centerX, CInt centerY, CFloat radius, Color color);
func void DrawEllipse(CInt centerX, CInt centerY, CFloat radiusH, CFloat radiusV, Color color);
func void DrawEllipseLines(CInt centerX, CInt centerY, CFloat radiusH, CFloat radiusV, Color color);
func void DrawRing(Vector2 center, CFloat innerRadius, CFloat outerRadius, CFloat startAngle, CFloat endAngle, CInt segments, Color color);
func void DrawRingLines(Vector2 center, CFloat innerRadius, CFloat outerRadius, CFloat startAngle, CFloat endAngle, CInt segments, Color color);
func void DrawRectangle(CInt posX, CInt posY, CInt width, CInt height, Color color);
func void DrawRectangleV(Vector2 position, Vector2 size, Color color);
func void DrawRectangleRec(Rectangle rec, Color color);
func void DrawRectanglePro(Rectangle rec, Vector2 origin, CFloat rotation, Color color);
func void DrawRectangleGradientV(CInt posX, CInt posY, CInt width, CInt height, Color color1, Color color2);
func void DrawRectangleGradientH(CInt posX, CInt posY, CInt width, CInt height, Color color1, Color color2);
func void DrawRectangleGradientEx(Rectangle rec, Color col1, Color col2, Color col3, Color col4);
func void DrawRectangleLines(CInt posX, CInt posY, CInt width, CInt height, Color color);
func void DrawRectangleLinesEx(Rectangle rec, CFloat lineThick, Color color);
func void DrawRectangleRounded(Rectangle rec, CFloat roundness, CInt segments, Color color);
func void DrawRectangleRoundedLines(Rectangle rec, CFloat roundness, CInt segments, CFloat lineThick, Color color);
func void DrawTriangle(Vector2 v1, Vector2 v2, Vector2 v3, Color color);
func void DrawTriangleLines(Vector2 v1, Vector2 v2, Vector2 v3, Color color);
func void DrawTriangleFan(Vector2 *points, CInt pointsCount, Color color);
func void DrawTriangleStrip(Vector2 *points, CInt pointsCount, Color color);
func void DrawPoly(Vector2 center, CInt sides, CFloat radius, CFloat rotation, Color color);
func void DrawPolyLines(Vector2 center, CInt sides, CFloat radius, CFloat rotation, Color color);
func void DrawPolyLinesEx(Vector2 center, CInt sides, CFloat radius, CFloat rotation, CFloat lineThick, Color color);
func bool CheckCollisionRecs(Rectangle rec1, Rectangle rec2);
func bool CheckCollisionCircles(Vector2 center1, CFloat radius1, Vector2 center2, CFloat radius2);
func bool CheckCollisionCircleRec(Vector2 center, CFloat radius, Rectangle rec);
func bool CheckCollisionPointRec(Vector2 point, Rectangle rec);
func bool CheckCollisionPointCircle(Vector2 point, Vector2 center, CFloat radius);
func bool CheckCollisionPointTriangle(Vector2 point, Vector2 p1, Vector2 p2, Vector2 p3);
func bool CheckCollisionLines(Vector2 startPos1, Vector2 endPos1, Vector2 startPos2, Vector2 endPos2, Vector2 *collisionPoint);
func Rectangle GetCollisionRec(Rectangle rec1, Rectangle rec2);
func Image LoadImage(CChar *fileName);
func Image LoadImageRaw(CChar *fileName, CInt width, CInt height, CInt format, CInt headerSize);
func Image LoadImageAnim(CChar *fileName, CInt *frames);
func Image LoadImageFromMemory(CChar *fileType, CChar *fileData, CInt dataSize);
func Image LoadImageFromTexture(Texture2D texture);
func Image LoadImageFromScreen();
func void UnloadImage(Image image);
func bool ExportImage(Image image, CChar *fileName);
func bool ExportImageAsCode(Image image, CChar *fileName);
func Image GenImageColor(CInt width, CInt height, Color color);
func Image GenImageGradientV(CInt width, CInt height, Color top, Color bottom);
func Image GenImageGradientH(CInt width, CInt height, Color left, Color right);
func Image GenImageGradientRadial(CInt width, CInt height, CFloat density, Color inner, Color outer);
func Image GenImageChecked(CInt width, CInt height, CInt checksX, CInt checksY, Color col1, Color col2);
func Image GenImageWhiteNoise(CInt width, CInt height, CFloat factor);
func Image GenImagePerlinNoise(CInt width, CInt height, CInt offsetX, CInt offsetY, CFloat scale);
func Image GenImageCellular(CInt width, CInt height, CInt tileSize);
func Image ImageCopy(Image image);
func Image ImageFromImage(Image image, Rectangle rec);
func Image ImageText(CChar *text, CInt fontSize, Color color);
func Image ImageTextEx(Font font, CChar *text, CFloat fontSize, CFloat spacing, Color tint);
func void ImageFormat(Image *image, CInt newFormat);
func void ImageToPOT(Image *image, Color fill);
func void ImageCrop(Image *image, Rectangle crop);
func void ImageAlphaCrop(Image *image, CFloat threshold);
func void ImageAlphaClear(Image *image, Color color, CFloat threshold);
func void ImageAlphaMask(Image *image, Image alphaMask);
func void ImageAlphaPremultiply(Image *image);
func void ImageResize(Image *image, CInt newWidth, CInt newHeight);
func void ImageResizeNN(Image *image, int newWidth,int newHeight);
func void ImageResizeCanvas(Image *image, CInt newWidth, CInt newHeight, CInt offsetX, CInt offsetY, Color fill);
func void ImageMipmaps(Image *image);
func void ImageDither(Image *image, CInt rBpp, CInt gBpp, CInt bBpp, CInt aBpp);
func void ImageFlipVertical(Image *image);
func void ImageFlipHorizontal(Image *image);
func void ImageRotateCW(Image *image);
func void ImageRotateCCW(Image *image);
func void ImageColorTint(Image *image, Color color);
func void ImageColorInvert(Image *image);
func void ImageColorGrayscale(Image *image);
func void ImageColorContrast(Image *image, CFloat contrast);
func void ImageColorBrightness(Image *image, CInt brightness);
func void ImageColorReplace(Image *image, Color color, Color replace);
func Color *LoadImageColors(Image image);
func Color *LoadImagePalette(Image image, CInt maxPaletteSize, CInt *colorsCount);
func void UnloadImageColors(Color *colors);
func void UnloadImagePalette(Color *colors);
func Rectangle GetImageAlphaBorder(Image image, CFloat threshold);
func void ImageClearBackground(Image *dst, Color color);
func void ImageDrawPixel(Image *dst, CInt posX, CInt posY, Color color);
func void ImageDrawPixelV(Image *dst, Vector2 position, Color color);
func void ImageDrawLine(Image *dst, CInt startPosX, CInt startPosY, CInt endPosX, CInt endPosY, Color color);
func void ImageDrawLineV(Image *dst, Vector2 start, Vector2 end, Color color);
func void ImageDrawCircle(Image *dst, CInt centerX, CInt centerY, CInt radius, Color color);
func void ImageDrawCircleV(Image *dst, Vector2 center, CInt radius, Color color);
func void ImageDrawRectangle(Image *dst, CInt posX, CInt posY, CInt width, CInt height, Color color);
func void ImageDrawRectangleV(Image *dst, Vector2 position, Vector2 size, Color color);
func void ImageDrawRectangleRec(Image *dst, Rectangle rec, Color color);
func void ImageDrawRectangleLines(Image *dst, Rectangle rec, CInt thick, Color color);
func void ImageDraw(Image *dst, Image src, Rectangle srcRec, Rectangle dstRec, Color tint);
func void ImageDrawText(Image *dst, CChar *text, CInt posX, CInt posY, CInt fontSize, Color color);
func void ImageDrawTextEx(Image *dst, Font font, CChar *text, Vector2 position, CFloat fontSize, CFloat spacing, Color tint);
func Texture2D LoadTexture(CChar *fileName);
func Texture2D LoadTextureFromImage(Image image);
func TextureCubemap LoadTextureCubemap(Image image, CInt layout);
func RenderTexture2D LoadRenderTexture(CInt width, CInt height);
func void UnloadTexture(Texture2D texture);
func void UnloadRenderTexture(RenderTexture2D target);
func void UpdateTexture(Texture2D texture, void *pixels);
func void UpdateTextureRec(Texture2D texture, Rectangle rec, void *pixels);
func void GenTextureMipmaps(Texture2D *texture);
func void SetTextureFilter(Texture2D texture, CInt filter);
func void SetTextureWrap(Texture2D texture, CInt wrap);
func void DrawTexture(Texture2D texture, CInt posX, CInt posY, Color tint);
func void DrawTextureV(Texture2D texture, Vector2 position, Color tint);
func void DrawTextureEx(Texture2D texture, Vector2 position, CFloat rotation, CFloat scale, Color tint);
func void DrawTextureRec(Texture2D texture, Rectangle source, Vector2 position, Color tint);
func void DrawTextureQuad(Texture2D texture, Vector2 tiling, Vector2 offset, Rectangle quad, Color tint);
func void DrawTextureTiled(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, CFloat rotation, CFloat scale, Color tint);
func void DrawTexturePro(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, CFloat rotation, Color tint);
func void DrawTextureNPatch(Texture2D texture, NPatchInfo nPatchInfo, Rectangle dest, Vector2 origin, CFloat rotation, Color tint);
func void DrawTexturePoly(Texture2D texture, Vector2 center, Vector2 *points, Vector2 *texcoords, CInt pointsCount, Color tint);
func Color Fade(Color color, CFloat alpha);
func CInt ColorToInt(Color color);
func Vector4 ColorNormalize(Color color);
func Color ColorFromNormalized(Vector4 normalized);
func Vector3 ColorToHSV(Color color);
func Color ColorFromHSV(CFloat hue, CFloat saturation, CFloat value);
func Color ColorAlpha(Color color, CFloat alpha);
func Color ColorAlphaBlend(Color dst, Color src, Color tint);
func Color GetColor(CInt hexValue);
func Color GetPixelColor(void *srcPtr, CInt format);
func void SetPixelColor(void *dstPtr, Color color, CInt format);
func CInt GetPixelDataSize(CInt width, CInt height, CInt format);
func Font GetFontDefault();
func Font LoadFont(CChar *fileName);
func Font LoadFontEx(CChar *fileName, CInt fontSize, CInt *fontChars, CInt charsCount);
func Font LoadFontFromImage(Image image, Color key, CInt firstChar);
func Font LoadFontFromMemory(CChar *fileType, CChar *fileData, CInt dataSize, CInt fontSize, CInt *fontChars, CInt charsCount);
func CharInfo *LoadFontData(CChar *fileData, CInt dataSize, CInt fontSize, CInt *fontChars, CInt charsCount, CInt type);
func Image GenImageFontAtlas(CharInfo *chars, Rectangle **recs, CInt charsCount, CInt fontSize, CInt padding, CInt packMethod);
func void UnloadFontData(CharInfo *chars, CInt charsCount);
func void UnloadFont(Font font);
func void DrawFPS(CInt posX, CInt posY);
func void DrawText(CChar *text, CInt posX, CInt posY, CInt fontSize, Color color);
func void DrawTextEx(Font font, CChar *text, Vector2 position, CFloat fontSize, CFloat spacing, Color tint);
func void DrawTextRec(Font font, CChar *text, Rectangle rec, CFloat fontSize, CFloat spacing, bool wordWrap, Color tint);
func void DrawTextRecEx(Font font, CChar *text, Rectangle rec, CFloat fontSize, CFloat spacing, bool wordWrap, Color tint, CInt selectStart, CInt selectLength, Color selectTint, Color selectBackTint);
func void DrawTextCodepoint(Font font, CInt codepoint, Vector2 position, CFloat fontSize, Color tint);
func CInt MeasureText(CChar *text, CInt fontSize);
func Vector2 MeasureTextEx(Font font, CChar *text, CFloat fontSize, CFloat spacing);
func CInt GetGlyphIndex(Font font, CInt codepoint);
func CInt TextCopy(CChar *dst, CChar *src);
func bool TextIsEqual(CChar *text1, CChar *text2);
func CUInt TextLength(CChar *text);
func CChar *TextFormat(CChar *text, ...);
func CChar *TextSubtext(CChar *text, CInt position, CInt length);
func CChar *TextReplace(CChar *text, CChar *replace, CChar *by);
func CChar *TextInsert(CChar *text, CChar *insert, CInt position);
func CChar *TextJoin(CChar **textList, CInt count, CChar *delimiter);
func CChar **TextSplit(CChar *text, CChar delimiter, CInt *count);
func void TextAppend(CChar *text, CChar *append, CInt *position);
func CInt TextFindIndex(CChar *text, CChar *find);
func CChar *TextToUpper(CChar *text);
func CChar *TextToLower(CChar *text);
func CChar *TextToPascal(CChar *text);
func CInt TextToInteger(CChar *text);
func CChar *TextToUtf8(CInt *codepoints, CInt length);
func CInt *LoadCodepoints(CChar *text, CInt *count);
func void UnloadCodepoints(CInt *codepoints);
func CInt GetCodepointsCount(CChar *text);
func CInt GetCodepoint(CChar *text, CInt *bytesProcessed);
func CChar *CodepointToUtf8(CInt codepoint, CInt *byteLength);
func void DrawLine3D(Vector3 startPos, Vector3 endPos, Color color);
func void DrawPoint3D(Vector3 position, Color color);
func void DrawCircle3D(Vector3 center, CFloat radius, Vector3 rotationAxis, CFloat rotationAngle, Color color);
func void DrawTriangle3D(Vector3 v1, Vector3 v2, Vector3 v3, Color color);
func void DrawTriangleStrip3D(Vector3 *points, CInt pointsCount, Color color);
func void DrawCube(Vector3 position, CFloat width, CFloat height, CFloat length, Color color);
func void DrawCubeV(Vector3 position, Vector3 size, Color color);
func void DrawCubeWires(Vector3 position, CFloat width, CFloat height, CFloat length, Color color);
func void DrawCubeWiresV(Vector3 position, Vector3 size, Color color);
func void DrawCubeTexture(Texture2D texture, Vector3 position, CFloat width, CFloat height, CFloat length, Color color);
func void DrawSphere(Vector3 centerPos, CFloat radius, Color color);
func void DrawSphereEx(Vector3 centerPos, CFloat radius, CInt rings, CInt slices, Color color);
func void DrawSphereWires(Vector3 centerPos, CFloat radius, CInt rings, CInt slices, Color color);
func void DrawCylinder(Vector3 position, CFloat radiusTop, CFloat radiusBottom, CFloat height, CInt slices, Color color);
func void DrawCylinderWires(Vector3 position, CFloat radiusTop, CFloat radiusBottom, CFloat height, CInt slices, Color color);
func void DrawPlane(Vector3 centerPos, Vector2 size, Color color);
func void DrawRay(Ray ray, Color color);
func void DrawGrid(CInt slices, CFloat spacing);
func Model LoadModel(CChar *fileName);
func Model LoadModelFromMesh(Mesh mesh);
func void UnloadModel(Model model);
func void UnloadModelKeepMeshes(Model model);
func BoundingBox GetModelBoundingBox(Model model);
func void DrawModel(Model model, Vector3 position, CFloat scale, Color tint);
func void DrawModelEx(Model model, Vector3 position, Vector3 rotationAxis, CFloat rotationAngle, Vector3 scale, Color tint);
func void DrawModelWires(Model model, Vector3 position, CFloat scale, Color tint);
func void DrawModelWiresEx(Model model, Vector3 position, Vector3 rotationAxis, CFloat rotationAngle, Vector3 scale, Color tint);
func void DrawBoundingBox(BoundingBox box, Color color);
func void DrawBillboard(Camera camera, Texture2D texture, Vector3 position, CFloat size, Color tint);
func void DrawBillboardRec(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector2 size, Color tint);
func void DrawBillboardPro(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector2 size, Vector2 origin, CFloat rotation, Color tint);
func void UploadMesh(Mesh *mesh, bool dynamic);
func void UpdateMeshBuffer(Mesh mesh, CInt index, void *data, CInt dataSize, CInt offset);
func void UnloadMesh(Mesh mesh);
func void DrawMesh(Mesh mesh, Material material, Matrix transform);
func void DrawMeshInstanced(Mesh mesh, Material material, Matrix *transforms, CInt instances);
func bool ExportMesh(Mesh mesh, CChar *fileName);
func BoundingBox GetMeshBoundingBox(Mesh mesh);
func void GenMeshTangents(Mesh *mesh);
func void GenMeshBinormals(Mesh *mesh);
func Mesh GenMeshPoly(CInt sides, CFloat radius);
func Mesh GenMeshPlane(CFloat width, CFloat length, CInt resX, CInt resZ);
func Mesh GenMeshCube(CFloat width, CFloat height, CFloat length);
func Mesh GenMeshSphere(CFloat radius, CInt rings, CInt slices);
func Mesh GenMeshHemiSphere(CFloat radius, CInt rings, CInt slices);
func Mesh GenMeshCylinder(CFloat radius, CFloat height, CInt slices);
func Mesh GenMeshCone(CFloat radius, CFloat height, CInt slices);
func Mesh GenMeshTorus(CFloat radius, CFloat size, CInt radSeg, CInt sides);
func Mesh GenMeshKnot(CFloat radius, CFloat size, CInt radSeg, CInt sides);
func Mesh GenMeshHeightmap(Image heightmap, Vector3 size);
func Mesh GenMeshCubicmap(Image cubicmap, Vector3 cubeSize);
func Material *LoadMaterials(CChar *fileName, CInt *materialCount);
func Material LoadMaterialDefault();
func void UnloadMaterial(Material material);
func void SetMaterialTexture(Material *material, CInt mapType, Texture2D texture);
func void SetModelMeshMaterial(Model *model, CInt meshId, CInt materialId);
func ModelAnimation *LoadModelAnimations(CChar *fileName, CInt *animsCount);
func void UpdateModelAnimation(Model model, ModelAnimation anim, CInt frame);
func void UnloadModelAnimation(ModelAnimation anim);
func void UnloadModelAnimations(ModelAnimation* animations, CUInt count);
func bool IsModelAnimationValid(Model model, ModelAnimation anim);
func bool CheckCollisionSpheres(Vector3 center1, CFloat radius1, Vector3 center2, CFloat radius2);
func bool CheckCollisionBoxes(BoundingBox box1, BoundingBox box2);
func bool CheckCollisionBoxSphere(BoundingBox box, Vector3 center, CFloat radius);
func RayCollision GetRayCollisionSphere(Ray ray, Vector3 center, CFloat radius);
func RayCollision GetRayCollisionBox(Ray ray, BoundingBox box);
func RayCollision GetRayCollisionModel(Ray ray, Model model);
func RayCollision GetRayCollisionMesh(Ray ray, Mesh mesh, Matrix transform);
func RayCollision GetRayCollisionTriangle(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3);
func RayCollision GetRayCollisionQuad(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4);
func void InitAudioDevice();
func void CloseAudioDevice();
func bool IsAudioDeviceReady();
func void SetMasterVolume(CFloat volume);
func Wave LoadWave(CChar *fileName);
func Wave LoadWaveFromMemory(CChar *fileType, CChar *fileData, CInt dataSize);
func Sound LoadSound(CChar *fileName);
func Sound LoadSoundFromWave(Wave wave);
func void UpdateSound(Sound sound, void *data, CInt samplesCount);
func void UnloadWave(Wave wave);
func void UnloadSound(Sound sound);
func bool ExportWave(Wave wave, CChar *fileName);
func bool ExportWaveAsCode(Wave wave, CChar *fileName);
func void PlaySound(Sound sound);
func void StopSound(Sound sound);
func void PauseSound(Sound sound);
func void ResumeSound(Sound sound);
func void PlaySoundMulti(Sound sound);
func void StopSoundMulti();
func CInt GetSoundsPlaying();
func bool IsSoundPlaying(Sound sound);
func void SetSoundVolume(Sound sound, CFloat volume);
func void SetSoundPitch(Sound sound, CFloat pitch);
func void WaveFormat(Wave *wave, CInt sampleRate, CInt sampleSize, CInt channels);
func Wave WaveCopy(Wave wave);
func void WaveCrop(Wave *wave, CInt initSample, CInt finalSample);
func CFloat *LoadWaveSamples(Wave wave);
func void UnloadWaveSamples(CFloat *samples);
func Music LoadMusicStream(CChar *fileName);
func Music LoadMusicStreamFromMemory(CChar *fileType, CChar *data, CInt dataSize);
func void UnloadMusicStream(Music music);
func void PlayMusicStream(Music music);
func bool IsMusicStreamPlaying(Music music);
func void UpdateMusicStream(Music music);
func void StopMusicStream(Music music);
func void PauseMusicStream(Music music);
func void ResumeMusicStream(Music music);
func void SetMusicVolume(Music music, CFloat volume);
func void SetMusicPitch(Music music, CFloat pitch);
func CFloat GetMusicTimeLength(Music music);
func CFloat GetMusicTimePlayed(Music music);
func AudioStream LoadAudioStream(CUInt sampleRate, CUInt sampleSize, CUInt channels);
func void UnloadAudioStream(AudioStream stream);
func void UpdateAudioStream(AudioStream stream, void *data, CInt samplesCount);
func bool IsAudioStreamProcessed(AudioStream stream);
func void PlayAudioStream(AudioStream stream);
func void PauseAudioStream(AudioStream stream);
func void ResumeAudioStream(AudioStream stream);
func bool IsAudioStreamPlaying(AudioStream stream);
func void StopAudioStream(AudioStream stream);
func void SetAudioStreamVolume(AudioStream stream, CFloat volume);
func void SetAudioStreamPitch(AudioStream stream, CFloat pitch);
func void SetAudioStreamBufferSizeDefault(CInt size);

func void InitWindow(CInt width, CInt height, CChar *title);
func bool WindowShouldClose();
func void CloseWindow();
func bool IsWindowReady();
func bool IsWindowFullscreen();
func bool IsWindowHidden();
func bool IsWindowMinimized();
func bool IsWindowMaximized();
func bool IsWindowFocused();
func bool IsWindowResized();
func bool IsWindowState(CUInt flag);
func void SetWindowState(CUInt flags);
func void ClearWindowState(CUInt flags);
func void ToggleFullscreen();
func void MaximizeWindow();
func void MinimizeWindow();
func void RestoreWindow();
func void SetWindowIcon(Image image);
func void SetWindowTitle(CChar *title);
func void SetWindowPosition(CInt x, CInt y);
func void SetWindowMonitor(CInt monitor);
func void SetWindowMinSize(CInt width, CInt height);
func void SetWindowSize(CInt width, CInt height);
func void *GetWindowHandle();
func CInt GetScreenWidth();
func CInt GetScreenHeight();
func CInt GetMonitorCount();
func CInt GetCurrentMonitor();
func Vector2 GetMonitorPosition(CInt monitor);
func CInt GetMonitorWidth(CInt monitor);
func CInt GetMonitorHeight(CInt monitor);
func CInt GetMonitorPhysicalWidth(CInt monitor);
func CInt GetMonitorPhysicalHeight(CInt monitor);
func CInt GetMonitorRefreshRate(CInt monitor);
func Vector2 GetWindowPosition();
func Vector2 GetWindowScaleDPI();
func CChar *GetMonitorName(CInt monitor);
func void SetClipboardText(CChar *text);
func CChar *GetClipboardText();
func void SwapScreenBuffer();
func void PollInputEvents();
func void WaitTime(CFloat ms);
func void ShowCursor();
func void HideCursor();
func bool IsCursorHidden();
func void EnableCursor();
func void DisableCursor();
func bool IsCursorOnScreen();
func void ClearBackground(Color color);
func void BeginDrawing();
func void EndDrawing();
func void BeginMode2D(Camera2D camera);
func void EndMode2D();
func void BeginMode3D(Camera3D camera);
func void EndMode3D();
func void BeginTextureMode(RenderTexture2D target);
func void EndTextureMode();
func void BeginShaderMode(Shader shader);
func void EndShaderMode();
func void BeginBlendMode(CInt mode);
func void EndBlendMode();
func void BeginScissorMode(CInt x, CInt y, CInt width, CInt height);
func void EndScissorMode();
func void BeginVrStereoMode(VrStereoConfig config);
func void EndVrStereoMode();
func VrStereoConfig LoadVrStereoConfig(VrDeviceInfo device);
func void UnloadVrStereoConfig(VrStereoConfig config);
func Shader LoadShader(CChar *vsFileName, CChar *fsFileName);
func Shader LoadShaderFromMemory(CChar *vsCode, CChar *fsCode);
func CInt GetShaderLocation(Shader shader, CChar *uniformName);
func CInt GetShaderLocationAttrib(Shader shader, CChar *attribName);
func void SetShaderValue(Shader shader, CInt locIndex, void *value, CInt uniformType);
func void SetShaderValueV(Shader shader, CInt locIndex, void *value, CInt uniformType, CInt count);
func void SetShaderValueMatrix(Shader shader, CInt locIndex, Matrix mat);
func void SetShaderValueTexture(Shader shader, CInt locIndex, Texture2D texture);
func void UnloadShader(Shader shader);
func Ray GetMouseRay(Vector2 mousePosition, Camera camera);
func Matrix GetCameraMatrix(Camera camera);
func Matrix GetCameraMatrix2D(Camera2D camera);
func Vector2 GetWorldToScreen(Vector3 position, Camera camera);
func Vector2 GetWorldToScreenEx(Vector3 position, Camera camera, CInt width, CInt height);
func Vector2 GetWorldToScreen2D(Vector2 position, Camera2D camera);
func Vector2 GetScreenToWorld2D(Vector2 position, Camera2D camera);
func void SetTargetFPS(CInt fps);
func CInt GetFPS();
func CFloat GetFrameTime();
func CDouble GetTime();
func CInt GetRandomValue(CInt min, CInt max);
func void TakeScreenshot(CChar *fileName);
func void SetConfigFlags(CUInt flags);
func void TraceLog(CInt logLevel, CChar *text, ...);
func void SetTraceLogLevel(CInt logLevel);
func void *MemAlloc(CInt size);
func void *MemRealloc(void *ptr, CInt size);
func void MemFree(void *ptr);
func void SetTraceLogCallback(TraceLogCallback callback);
func void SetLoadFileDataCallback(LoadFileDataCallback callback);
func void SetSaveFileDataCallback(SaveFileDataCallback callback);
func void SetLoadFileTextCallback(LoadFileTextCallback callback);
func void SetSaveFileTextCallback(SaveFileTextCallback callback);
func CChar *LoadFileData(CChar *fileName, CUInt *bytesRead);
func void UnloadFileData(CChar *data);
func bool SaveFileData(CChar *fileName, void *data, CUInt bytesToWrite);
func CChar *LoadFileText(CChar *fileName);
func void UnloadFileText(CChar *text);
func bool SaveFileText(CChar *fileName, CChar *text);
func bool FileExists(CChar *fileName);
func bool DirectoryExists(CChar *dirPath);
func bool IsFileExtension(CChar *fileName, CChar *ext);
func CChar *GetFileExtension(CChar *fileName);
func CChar *GetFileName(CChar *filePath);
func CChar *GetFileNameWithoutExt(CChar *filePath);
func CChar *GetDirectoryPath(CChar *filePath);
func CChar *GetPrevDirectoryPath(CChar *dirPath);
func CChar *GetWorkingDirectory();
func CChar **GetDirectoryFiles(CChar *dirPath, CInt *count);
func void ClearDirectoryFiles();
func bool ChangeDirectory(CChar *dir);
func bool IsFileDropped();
func CChar **GetDroppedFiles(CInt *count);
func void ClearDroppedFiles();
func CLong GetFileModTime(CChar *fileName);
func CChar *CompressData(CChar *data, CInt dataLength, CInt *compDataLength);
func CChar *DecompressData(CChar *compData, CInt compDataLength, CInt *dataLength);
func bool SaveStorageValue(CUInt position, CInt value);
func CInt LoadStorageValue(CUInt position);
func void OpenURL(CChar *url);
func bool IsKeyPressed(KeyboardKey key);
func bool IsKeyDown(KeyboardKey key);
func bool IsKeyReleased(KeyboardKey key);
func bool IsKeyUp(KeyboardKey key);
func void SetExitKey(KeyboardKey key);
func CInt GetKeyPressed();
func CInt GetCharPressed();
func bool IsGamepadAvailable(CInt gamepad);
func bool IsGamepadName(CInt gamepad, CChar *name);
func CChar *GetGamepadName(CInt gamepad);
func bool IsGamepadButtonPressed(CInt gamepad, MouseButton button);
func bool IsGamepadButtonDown(CInt gamepad, MouseButton button);
func bool IsGamepadButtonReleased(CInt gamepad, MouseButton button);
func bool IsGamepadButtonUp(CInt gamepad, MouseButton button);
func CInt GetGamepadButtonPressed();
func CInt GetGamepadAxisCount(CInt gamepad);
func CFloat GetGamepadAxisMovement(CInt gamepad, CInt axis);
func CInt SetGamepadMappings(CChar *mappings);
func bool IsMouseButtonPressed(MouseButton button);
func bool IsMouseButtonDown(MouseButton button);
func bool IsMouseButtonReleased(MouseButton button);
func bool IsMouseButtonUp(MouseButton button);
func CInt GetMouseX();
func CInt GetMouseY();
func Vector2 GetMousePosition();
func Vector2 GetMouseDelta();
func void SetMousePosition(CInt x, CInt y);
func void SetMouseOffset(CInt offsetX, CInt offsetY);
func void SetMouseScale(CFloat scaleX, CFloat scaleY);
func CFloat GetMouseWheelMove();
func void SetMouseCursor(CInt cursor);
func CInt GetTouchX();
func CInt GetTouchY();
func Vector2 GetTouchPosition(CInt index);
func void SetGesturesEnabled(CUInt flags);
func bool IsGestureDetected(CInt gesture);
func CInt GetGestureDetected();
func CInt GetTouchPointsCount();
func CFloat GetGestureHoldDuration();
func Vector2 GetGestureDragVector();
func CFloat GetGestureDragAngle();
func Vector2 GetGesturePinchVector();
func CFloat GetGesturePinchAngle();
func void SetCameraMode(Camera camera, CameraMode mode);
func void UpdateCamera(Camera *camera);
func void SetCameraPanControl(CInt keyPan);
func void SetCameraAltControl(CInt keyAlt);
func void SetCameraSmoothZoomControl(CInt keySmoothZoom);
func void SetCameraMoveControls(CInt keyFront, CInt keyBack, CInt keyRight, CInt keyLeft, CInt keyUp, CInt keyDown);
func void SetShapesTexture(Texture2D texture, Rectangle source);
func void DrawPixel(CInt posX, CInt posY, Color color);
func void DrawPixelV(Vector2 position, Color color);
func void DrawLine(CInt startPosX, CInt startPosY, CInt endPosX, CInt endPosY, Color color);
func void DrawLineV(Vector2 startPos, Vector2 endPos, Color color);
func void DrawLineEx(Vector2 startPos, Vector2 endPos, CFloat thick, Color color);
func void DrawLineBezier(Vector2 startPos, Vector2 endPos, CFloat thick, Color color);
func void DrawLineBezierQuad(Vector2 startPos, Vector2 endPos, Vector2 controlPos, CFloat thick, Color color);
func void DrawLineStrip(Vector2 *points, CInt pointsCount, Color color);
func void DrawCircle(CInt centerX, CInt centerY, CFloat radius, Color color);
func void DrawCircleSector(Vector2 center, CFloat radius, CFloat startAngle, CFloat endAngle, CInt segments, Color color);
func void DrawCircleSectorLines(Vector2 center, CFloat radius, CFloat startAngle, CFloat endAngle, CInt segments, Color color);
func void DrawCircleGradient(CInt centerX, CInt centerY, CFloat radius, Color color1, Color color2);
func void DrawCircleV(Vector2 center, CFloat radius, Color color);
func void DrawCircleLines(CInt centerX, CInt centerY, CFloat radius, Color color);
func void DrawEllipse(CInt centerX, CInt centerY, CFloat radiusH, CFloat radiusV, Color color);
func void DrawEllipseLines(CInt centerX, CInt centerY, CFloat radiusH, CFloat radiusV, Color color);
func void DrawRing(Vector2 center, CFloat innerRadius, CFloat outerRadius, CFloat startAngle, CFloat endAngle, CInt segments, Color color);
func void DrawRingLines(Vector2 center, CFloat innerRadius, CFloat outerRadius, CFloat startAngle, CFloat endAngle, CInt segments, Color color);
func void DrawRectangle(CInt posX, CInt posY, CInt width, CInt height, Color color);
func void DrawRectangleV(Vector2 position, Vector2 size, Color color);
func void DrawRectangleRec(Rectangle rec, Color color);
func void DrawRectanglePro(Rectangle rec, Vector2 origin, CFloat rotation, Color color);
func void DrawRectangleGradientV(CInt posX, CInt posY, CInt width, CInt height, Color color1, Color color2);
func void DrawRectangleGradientH(CInt posX, CInt posY, CInt width, CInt height, Color color1, Color color2);
func void DrawRectangleGradientEx(Rectangle rec, Color col1, Color col2, Color col3, Color col4);
func void DrawRectangleLines(CInt posX, CInt posY, CInt width, CInt height, Color color);
func void DrawRectangleLinesEx(Rectangle rec, CFloat lineThick, Color color);
func void DrawRectangleRounded(Rectangle rec, CFloat roundness, CInt segments, Color color);
func void DrawRectangleRoundedLines(Rectangle rec, CFloat roundness, CInt segments, CFloat lineThick, Color color);
func void DrawTriangle(Vector2 v1, Vector2 v2, Vector2 v3, Color color);
func void DrawTriangleLines(Vector2 v1, Vector2 v2, Vector2 v3, Color color);
func void DrawTriangleFan(Vector2 *points, CInt pointsCount, Color color);
func void DrawTriangleStrip(Vector2 *points, CInt pointsCount, Color color);
func void DrawPoly(Vector2 center, CInt sides, CFloat radius, CFloat rotation, Color color);
func void DrawPolyLines(Vector2 center, CInt sides, CFloat radius, CFloat rotation, Color color);
func void DrawPolyLinesEx(Vector2 center, CInt sides, CFloat radius, CFloat rotation, CFloat lineThick, Color color);
func bool CheckCollisionRecs(Rectangle rec1, Rectangle rec2);
func bool CheckCollisionCircles(Vector2 center1, CFloat radius1, Vector2 center2, CFloat radius2);
func bool CheckCollisionCircleRec(Vector2 center, CFloat radius, Rectangle rec);
func bool CheckCollisionPointRec(Vector2 point, Rectangle rec);
func bool CheckCollisionPointCircle(Vector2 point, Vector2 center, CFloat radius);
func bool CheckCollisionPointTriangle(Vector2 point, Vector2 p1, Vector2 p2, Vector2 p3);
func bool CheckCollisionLines(Vector2 startPos1, Vector2 endPos1, Vector2 startPos2, Vector2 endPos2, Vector2 *collisionPoint);
func Rectangle GetCollisionRec(Rectangle rec1, Rectangle rec2);
func Image LoadImage(CChar *fileName);
func Image LoadImageRaw(CChar *fileName, CInt width, CInt height, CInt format, CInt headerSize);
func Image LoadImageAnim(CChar *fileName, CInt *frames);
func Image LoadImageFromMemory(CChar *fileType, CChar *fileData, CInt dataSize);
func Image LoadImageFromTexture(Texture2D texture);
func Image LoadImageFromScreen();
func void UnloadImage(Image image);
func bool ExportImage(Image image, CChar *fileName);
func bool ExportImageAsCode(Image image, CChar *fileName);
func Image GenImageColor(CInt width, CInt height, Color color);
func Image GenImageGradientV(CInt width, CInt height, Color top, Color bottom);
func Image GenImageGradientH(CInt width, CInt height, Color left, Color right);
func Image GenImageGradientRadial(CInt width, CInt height, CFloat density, Color inner, Color outer);
func Image GenImageChecked(CInt width, CInt height, CInt checksX, CInt checksY, Color col1, Color col2);
func Image GenImageWhiteNoise(CInt width, CInt height, CFloat factor);
func Image GenImagePerlinNoise(CInt width, CInt height, CInt offsetX, CInt offsetY, CFloat scale);
func Image GenImageCellular(CInt width, CInt height, CInt tileSize);
func Image ImageCopy(Image image);
func Image ImageFromImage(Image image, Rectangle rec);
func Image ImageText(CChar *text, CInt fontSize, Color color);
func Image ImageTextEx(Font font, CChar *text, CFloat fontSize, CFloat spacing, Color tint);
func void ImageFormat(Image *image, CInt newFormat);
func void ImageToPOT(Image *image, Color fill);
func void ImageCrop(Image *image, Rectangle crop);
func void ImageAlphaCrop(Image *image, CFloat threshold);
func void ImageAlphaClear(Image *image, Color color, CFloat threshold);
func void ImageAlphaMask(Image *image, Image alphaMask);
func void ImageAlphaPremultiply(Image *image);
func void ImageResize(Image *image, CInt newWidth, CInt newHeight);
func void ImageResizeNN(Image *image, int newWidth,int newHeight);
func void ImageResizeCanvas(Image *image, CInt newWidth, CInt newHeight, CInt offsetX, CInt offsetY, Color fill);
func void ImageMipmaps(Image *image);
func void ImageDither(Image *image, CInt rBpp, CInt gBpp, CInt bBpp, CInt aBpp);
func void ImageFlipVertical(Image *image);
func void ImageFlipHorizontal(Image *image);
func void ImageRotateCW(Image *image);
func void ImageRotateCCW(Image *image);
func void ImageColorTint(Image *image, Color color);
func void ImageColorInvert(Image *image);
func void ImageColorGrayscale(Image *image);
func void ImageColorContrast(Image *image, CFloat contrast);
func void ImageColorBrightness(Image *image, CInt brightness);
func void ImageColorReplace(Image *image, Color color, Color replace);
func Color *LoadImageColors(Image image);
func Color *LoadImagePalette(Image image, CInt maxPaletteSize, CInt *colorsCount);
func void UnloadImageColors(Color *colors);
func void UnloadImagePalette(Color *colors);
func Rectangle GetImageAlphaBorder(Image image, CFloat threshold);
func void ImageClearBackground(Image *dst, Color color);
func void ImageDrawPixel(Image *dst, CInt posX, CInt posY, Color color);
func void ImageDrawPixelV(Image *dst, Vector2 position, Color color);
func void ImageDrawLine(Image *dst, CInt startPosX, CInt startPosY, CInt endPosX, CInt endPosY, Color color);
func void ImageDrawLineV(Image *dst, Vector2 start, Vector2 end, Color color);
func void ImageDrawCircle(Image *dst, CInt centerX, CInt centerY, CInt radius, Color color);
func void ImageDrawCircleV(Image *dst, Vector2 center, CInt radius, Color color);
func void ImageDrawRectangle(Image *dst, CInt posX, CInt posY, CInt width, CInt height, Color color);
func void ImageDrawRectangleV(Image *dst, Vector2 position, Vector2 size, Color color);
func void ImageDrawRectangleRec(Image *dst, Rectangle rec, Color color);
func void ImageDrawRectangleLines(Image *dst, Rectangle rec, CInt thick, Color color);
func void ImageDraw(Image *dst, Image src, Rectangle srcRec, Rectangle dstRec, Color tint);
func void ImageDrawText(Image *dst, CChar *text, CInt posX, CInt posY, CInt fontSize, Color color);
func void ImageDrawTextEx(Image *dst, Font font, CChar *text, Vector2 position, CFloat fontSize, CFloat spacing, Color tint);
func Texture2D LoadTexture(CChar *fileName);
func Texture2D LoadTextureFromImage(Image image);
func TextureCubemap LoadTextureCubemap(Image image, CInt layout);
func RenderTexture2D LoadRenderTexture(CInt width, CInt height);
func void UnloadTexture(Texture2D texture);
func void UnloadRenderTexture(RenderTexture2D target);
func void UpdateTexture(Texture2D texture, void *pixels);
func void UpdateTextureRec(Texture2D texture, Rectangle rec, void *pixels);
func void GenTextureMipmaps(Texture2D *texture);
func void SetTextureFilter(Texture2D texture, CInt filter);
func void SetTextureWrap(Texture2D texture, CInt wrap);
func void DrawTexture(Texture2D texture, CInt posX, CInt posY, Color tint);
func void DrawTextureV(Texture2D texture, Vector2 position, Color tint);
func void DrawTextureEx(Texture2D texture, Vector2 position, CFloat rotation, CFloat scale, Color tint);
func void DrawTextureRec(Texture2D texture, Rectangle source, Vector2 position, Color tint);
func void DrawTextureQuad(Texture2D texture, Vector2 tiling, Vector2 offset, Rectangle quad, Color tint);
func void DrawTextureTiled(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, CFloat rotation, CFloat scale, Color tint);
func void DrawTexturePro(Texture2D texture, Rectangle source, Rectangle dest, Vector2 origin, CFloat rotation, Color tint);
func void DrawTextureNPatch(Texture2D texture, NPatchInfo nPatchInfo, Rectangle dest, Vector2 origin, CFloat rotation, Color tint);
func void DrawTexturePoly(Texture2D texture, Vector2 center, Vector2 *points, Vector2 *texcoords, CInt pointsCount, Color tint);
func Color Fade(Color color, CFloat alpha);
func CInt ColorToInt(Color color);
func Vector4 ColorNormalize(Color color);
func Color ColorFromNormalized(Vector4 normalized);
func Vector3 ColorToHSV(Color color);
func Color ColorFromHSV(CFloat hue, CFloat saturation, CFloat value);
func Color ColorAlpha(Color color, CFloat alpha);
func Color ColorAlphaBlend(Color dst, Color src, Color tint);
func Color GetColor(CInt hexValue);
func Color GetPixelColor(void *srcPtr, CInt format);
func void SetPixelColor(void *dstPtr, Color color, CInt format);
func CInt GetPixelDataSize(CInt width, CInt height, CInt format);
func Font GetFontDefault();
func Font LoadFont(CChar *fileName);
func Font LoadFontEx(CChar *fileName, CInt fontSize, CInt *fontChars, CInt charsCount);
func Font LoadFontFromImage(Image image, Color key, CInt firstChar);
func Font LoadFontFromMemory(CChar *fileType, CChar *fileData, CInt dataSize, CInt fontSize, CInt *fontChars, CInt charsCount);
func CharInfo *LoadFontData(CChar *fileData, CInt dataSize, CInt fontSize, CInt *fontChars, CInt charsCount, CInt type);
func Image GenImageFontAtlas(CharInfo *chars, Rectangle **recs, CInt charsCount, CInt fontSize, CInt padding, CInt packMethod);
func void UnloadFontData(CharInfo *chars, CInt charsCount);
func void UnloadFont(Font font);
func void DrawFPS(CInt posX, CInt posY);
func void DrawText(CChar *text, CInt posX, CInt posY, CInt fontSize, Color color);
func void DrawTextEx(Font font, CChar *text, Vector2 position, CFloat fontSize, CFloat spacing, Color tint);
func void DrawTextRec(Font font, CChar *text, Rectangle rec, CFloat fontSize, CFloat spacing, bool wordWrap, Color tint);
func void DrawTextRecEx(Font font, CChar *text, Rectangle rec, CFloat fontSize, CFloat spacing, bool wordWrap, Color tint, CInt selectStart, CInt selectLength, Color selectTint, Color selectBackTint);
func void DrawTextCodepoint(Font font, CInt codepoint, Vector2 position, CFloat fontSize, Color tint);
func CInt MeasureText(CChar *text, CInt fontSize);
func Vector2 MeasureTextEx(Font font, CChar *text, CFloat fontSize, CFloat spacing);
func CInt GetGlyphIndex(Font font, CInt codepoint);
func CInt TextCopy(CChar *dst, CChar *src);
func bool TextIsEqual(CChar *text1, CChar *text2);
func CUInt TextLength(CChar *text);
func CChar *TextFormat(CChar *text, ...);
func CChar *TextSubtext(CChar *text, CInt position, CInt length);
func CChar *TextReplace(CChar *text, CChar *replace, CChar *by);
func CChar *TextInsert(CChar *text, CChar *insert, CInt position);
func CChar *TextJoin(CChar **textList, CInt count, CChar *delimiter);
func CChar **TextSplit(CChar *text, CChar delimiter, CInt *count);
func void TextAppend(CChar *text, CChar *append, CInt *position);
func CInt TextFindIndex(CChar *text, CChar *find);
func CChar *TextToUpper(CChar *text);
func CChar *TextToLower(CChar *text);
func CChar *TextToPascal(CChar *text);
func CInt TextToInteger(CChar *text);
func CChar *TextToUtf8(CInt *codepoints, CInt length);
func CInt *LoadCodepoints(CChar *text, CInt *count);
func void UnloadCodepoints(CInt *codepoints);
func CInt GetCodepointsCount(CChar *text);
func CInt GetCodepoint(CChar *text, CInt *bytesProcessed);
func CChar *CodepointToUtf8(CInt codepoint, CInt *byteLength);
func void DrawLine3D(Vector3 startPos, Vector3 endPos, Color color);
func void DrawPoint3D(Vector3 position, Color color);
func void DrawCircle3D(Vector3 center, CFloat radius, Vector3 rotationAxis, CFloat rotationAngle, Color color);
func void DrawTriangle3D(Vector3 v1, Vector3 v2, Vector3 v3, Color color);
func void DrawTriangleStrip3D(Vector3 *points, CInt pointsCount, Color color);
func void DrawCube(Vector3 position, CFloat width, CFloat height, CFloat length, Color color);
func void DrawCubeV(Vector3 position, Vector3 size, Color color);
func void DrawCubeWires(Vector3 position, CFloat width, CFloat height, CFloat length, Color color);
func void DrawCubeWiresV(Vector3 position, Vector3 size, Color color);
func void DrawCubeTexture(Texture2D texture, Vector3 position, CFloat width, CFloat height, CFloat length, Color color);
func void DrawSphere(Vector3 centerPos, CFloat radius, Color color);
func void DrawSphereEx(Vector3 centerPos, CFloat radius, CInt rings, CInt slices, Color color);
func void DrawSphereWires(Vector3 centerPos, CFloat radius, CInt rings, CInt slices, Color color);
func void DrawCylinder(Vector3 position, CFloat radiusTop, CFloat radiusBottom, CFloat height, CInt slices, Color color);
func void DrawCylinderWires(Vector3 position, CFloat radiusTop, CFloat radiusBottom, CFloat height, CInt slices, Color color);
func void DrawPlane(Vector3 centerPos, Vector2 size, Color color);
func void DrawRay(Ray ray, Color color);
func void DrawGrid(CInt slices, CFloat spacing);
func Model LoadModel(CChar *fileName);
func Model LoadModelFromMesh(Mesh mesh);
func void UnloadModel(Model model);
func void UnloadModelKeepMeshes(Model model);
func BoundingBox GetModelBoundingBox(Model model);
func void DrawModel(Model model, Vector3 position, CFloat scale, Color tint);
func void DrawModelEx(Model model, Vector3 position, Vector3 rotationAxis, CFloat rotationAngle, Vector3 scale, Color tint);
func void DrawModelWires(Model model, Vector3 position, CFloat scale, Color tint);
func void DrawModelWiresEx(Model model, Vector3 position, Vector3 rotationAxis, CFloat rotationAngle, Vector3 scale, Color tint);
func void DrawBoundingBox(BoundingBox box, Color color);
func void DrawBillboard(Camera camera, Texture2D texture, Vector3 position, CFloat size, Color tint);
func void DrawBillboardRec(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector2 size, Color tint);
func void DrawBillboardPro(Camera camera, Texture2D texture, Rectangle source, Vector3 position, Vector2 size, Vector2 origin, CFloat rotation, Color tint);
func void UploadMesh(Mesh *mesh, bool dynamic);
func void UpdateMeshBuffer(Mesh mesh, CInt index, void *data, CInt dataSize, CInt offset);
func void UnloadMesh(Mesh mesh);
func void DrawMesh(Mesh mesh, Material material, Matrix transform);
func void DrawMeshInstanced(Mesh mesh, Material material, Matrix *transforms, CInt instances);
func bool ExportMesh(Mesh mesh, CChar *fileName);
func BoundingBox GetMeshBoundingBox(Mesh mesh);
func void GenMeshTangents(Mesh *mesh);
func void GenMeshBinormals(Mesh *mesh);
func Mesh GenMeshPoly(CInt sides, CFloat radius);
func Mesh GenMeshPlane(CFloat width, CFloat length, CInt resX, CInt resZ);
func Mesh GenMeshCube(CFloat width, CFloat height, CFloat length);
func Mesh GenMeshSphere(CFloat radius, CInt rings, CInt slices);
func Mesh GenMeshHemiSphere(CFloat radius, CInt rings, CInt slices);
func Mesh GenMeshCylinder(CFloat radius, CFloat height, CInt slices);
func Mesh GenMeshCone(CFloat radius, CFloat height, CInt slices);
func Mesh GenMeshTorus(CFloat radius, CFloat size, CInt radSeg, CInt sides);
func Mesh GenMeshKnot(CFloat radius, CFloat size, CInt radSeg, CInt sides);
func Mesh GenMeshHeightmap(Image heightmap, Vector3 size);
func Mesh GenMeshCubicmap(Image cubicmap, Vector3 cubeSize);
func Material *LoadMaterials(CChar *fileName, CInt *materialCount);
func Material LoadMaterialDefault();
func void UnloadMaterial(Material material);
func void SetMaterialTexture(Material *material, CInt mapType, Texture2D texture);
func void SetModelMeshMaterial(Model *model, CInt meshId, CInt materialId);
func ModelAnimation *LoadModelAnimations(CChar *fileName, CInt *animsCount);
func void UpdateModelAnimation(Model model, ModelAnimation anim, CInt frame);
func void UnloadModelAnimation(ModelAnimation anim);
func void UnloadModelAnimations(ModelAnimation* animations, CUInt count);
func bool IsModelAnimationValid(Model model, ModelAnimation anim);
func bool CheckCollisionSpheres(Vector3 center1, CFloat radius1, Vector3 center2, CFloat radius2);
func bool CheckCollisionBoxes(BoundingBox box1, BoundingBox box2);
func bool CheckCollisionBoxSphere(BoundingBox box, Vector3 center, CFloat radius);
func RayCollision GetRayCollisionSphere(Ray ray, Vector3 center, CFloat radius);
func RayCollision GetRayCollisionBox(Ray ray, BoundingBox box);
func RayCollision GetRayCollisionModel(Ray ray, Model model);
func RayCollision GetRayCollisionMesh(Ray ray, Mesh mesh, Matrix transform);
func RayCollision GetRayCollisionTriangle(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3);
func RayCollision GetRayCollisionQuad(Ray ray, Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4);
func void InitAudioDevice();
func void CloseAudioDevice();
func bool IsAudioDeviceReady();
func void SetMasterVolume(CFloat volume);
func Wave LoadWave(CChar *fileName);
func Wave LoadWaveFromMemory(CChar *fileType, CChar *fileData, CInt dataSize);
func Sound LoadSound(CChar *fileName);
func Sound LoadSoundFromWave(Wave wave);
func void UpdateSound(Sound sound, void *data, CInt samplesCount);
func void UnloadWave(Wave wave);
func void UnloadSound(Sound sound);
func bool ExportWave(Wave wave, CChar *fileName);
func bool ExportWaveAsCode(Wave wave, CChar *fileName);
func void PlaySound(Sound sound);
func void StopSound(Sound sound);
func void PauseSound(Sound sound);
func void ResumeSound(Sound sound);
func void PlaySoundMulti(Sound sound);
func void StopSoundMulti();
func CInt GetSoundsPlaying();
func bool IsSoundPlaying(Sound sound);
func void SetSoundVolume(Sound sound, CFloat volume);
func void SetSoundPitch(Sound sound, CFloat pitch);
func void WaveFormat(Wave *wave, CInt sampleRate, CInt sampleSize, CInt channels);
func Wave WaveCopy(Wave wave);
func void WaveCrop(Wave *wave, CInt initSample, CInt finalSample);
func CFloat *LoadWaveSamples(Wave wave);
func void UnloadWaveSamples(CFloat *samples);
func Music LoadMusicStream(CChar *fileName);
func Music LoadMusicStreamFromMemory(CChar *fileType, CChar *data, CInt dataSize);
func void UnloadMusicStream(Music music);
func void PlayMusicStream(Music music);
func bool IsMusicStreamPlaying(Music music);
func void UpdateMusicStream(Music music);
func void StopMusicStream(Music music);
func void PauseMusicStream(Music music);
func void ResumeMusicStream(Music music);
func void SetMusicVolume(Music music, CFloat volume);
func void SetMusicPitch(Music music, CFloat pitch);
func CFloat GetMusicTimeLength(Music music);
func CFloat GetMusicTimePlayed(Music music);
func AudioStream LoadAudioStream(CUInt sampleRate, CUInt sampleSize, CUInt channels);
func void UnloadAudioStream(AudioStream stream);
func void UpdateAudioStream(AudioStream stream, void *data, CInt samplesCount);
func bool IsAudioStreamProcessed(AudioStream stream);
func void PlayAudioStream(AudioStream stream);
func void PauseAudioStream(AudioStream stream);
func void ResumeAudioStream(AudioStream stream);
func bool IsAudioStreamPlaying(AudioStream stream);
func void StopAudioStream(AudioStream stream);
func void SetAudioStreamVolume(AudioStream stream, CFloat volume);
func void SetAudioStreamPitch(AudioStream stream, CFloat pitch);
func void SetAudioStreamBufferSizeDefault(CInt size);
